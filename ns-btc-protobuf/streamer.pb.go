// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streamer.proto

package nsbtcprotobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// continious resync
type TxsToCheck struct {
	Hash                 []string `protobuf:"bytes,1,rep,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxsToCheck) Reset()         { *m = TxsToCheck{} }
func (m *TxsToCheck) String() string { return proto.CompactTextString(m) }
func (*TxsToCheck) ProtoMessage()    {}
func (*TxsToCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{0}
}

func (m *TxsToCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxsToCheck.Unmarshal(m, b)
}
func (m *TxsToCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxsToCheck.Marshal(b, m, deterministic)
}
func (m *TxsToCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxsToCheck.Merge(m, src)
}
func (m *TxsToCheck) XXX_Size() int {
	return xxx_messageInfo_TxsToCheck.Size(m)
}
func (m *TxsToCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_TxsToCheck.DiscardUnknown(m)
}

var xxx_messageInfo_TxsToCheck proto.InternalMessageInfo

func (m *TxsToCheck) GetHash() []string {
	if m != nil {
		return m.Hash
	}
	return nil
}

type RejectedTxs struct {
	RejectedTxs          []string `protobuf:"bytes,1,rep,name=RejectedTxs,proto3" json:"RejectedTxs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RejectedTxs) Reset()         { *m = RejectedTxs{} }
func (m *RejectedTxs) String() string { return proto.CompactTextString(m) }
func (*RejectedTxs) ProtoMessage()    {}
func (*RejectedTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{1}
}

func (m *RejectedTxs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RejectedTxs.Unmarshal(m, b)
}
func (m *RejectedTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RejectedTxs.Marshal(b, m, deterministic)
}
func (m *RejectedTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejectedTxs.Merge(m, src)
}
func (m *RejectedTxs) XXX_Size() int {
	return xxx_messageInfo_RejectedTxs.Size(m)
}
func (m *RejectedTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_RejectedTxs.DiscardUnknown(m)
}

var xxx_messageInfo_RejectedTxs proto.InternalMessageInfo

func (m *RejectedTxs) GetRejectedTxs() []string {
	if m != nil {
		return m.RejectedTxs
	}
	return nil
}

type BTCTransaction struct {
	UserID               string                         `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TxID                 string                         `protobuf:"bytes,2,opt,name=txID,proto3" json:"txID,omitempty"`
	TxHash               string                         `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	TxOutScript          string                         `protobuf:"bytes,4,opt,name=txOutScript,proto3" json:"txOutScript,omitempty"`
	TxAddress            []string                       `protobuf:"bytes,5,rep,name=txAddress,proto3" json:"txAddress,omitempty"`
	TxStatus             int32                          `protobuf:"varint,6,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	TxOutAmount          int64                          `protobuf:"varint,7,opt,name=txOutAmount,proto3" json:"txOutAmount,omitempty"`
	BlockTime            int64                          `protobuf:"varint,8,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	BlockHeight          int64                          `protobuf:"varint,9,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	Confirmations        int32                          `protobuf:"varint,10,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	TxFee                int64                          `protobuf:"varint,11,opt,name=txFee,proto3" json:"txFee,omitempty"`
	MempoolTime          int64                          `protobuf:"varint,12,opt,name=mempoolTime,proto3" json:"mempoolTime,omitempty"`
	TxInputs             []*BTCTransaction_AddresAmount `protobuf:"bytes,13,rep,name=txInputs,proto3" json:"txInputs,omitempty"`
	TxOutputs            []*BTCTransaction_AddresAmount `protobuf:"bytes,14,rep,name=TxOutputs,proto3" json:"TxOutputs,omitempty"`
	WalletsInput         []*BTCTransaction_WalletForTx  `protobuf:"bytes,15,rep,name=WalletsInput,proto3" json:"WalletsInput,omitempty"`
	WalletsOutput        []*BTCTransaction_WalletForTx  `protobuf:"bytes,16,rep,name=WalletsOutput,proto3" json:"WalletsOutput,omitempty"`
	Resync               bool                           `protobuf:"varint,17,opt,name=resync,proto3" json:"resync,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BTCTransaction) Reset()         { *m = BTCTransaction{} }
func (m *BTCTransaction) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction) ProtoMessage()    {}
func (*BTCTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{2}
}

func (m *BTCTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction.Unmarshal(m, b)
}
func (m *BTCTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction.Marshal(b, m, deterministic)
}
func (m *BTCTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction.Merge(m, src)
}
func (m *BTCTransaction) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction.Size(m)
}
func (m *BTCTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction proto.InternalMessageInfo

func (m *BTCTransaction) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *BTCTransaction) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *BTCTransaction) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *BTCTransaction) GetTxOutScript() string {
	if m != nil {
		return m.TxOutScript
	}
	return ""
}

func (m *BTCTransaction) GetTxAddress() []string {
	if m != nil {
		return m.TxAddress
	}
	return nil
}

func (m *BTCTransaction) GetTxStatus() int32 {
	if m != nil {
		return m.TxStatus
	}
	return 0
}

func (m *BTCTransaction) GetTxOutAmount() int64 {
	if m != nil {
		return m.TxOutAmount
	}
	return 0
}

func (m *BTCTransaction) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *BTCTransaction) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BTCTransaction) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BTCTransaction) GetTxFee() int64 {
	if m != nil {
		return m.TxFee
	}
	return 0
}

func (m *BTCTransaction) GetMempoolTime() int64 {
	if m != nil {
		return m.MempoolTime
	}
	return 0
}

func (m *BTCTransaction) GetTxInputs() []*BTCTransaction_AddresAmount {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *BTCTransaction) GetTxOutputs() []*BTCTransaction_AddresAmount {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

func (m *BTCTransaction) GetWalletsInput() []*BTCTransaction_WalletForTx {
	if m != nil {
		return m.WalletsInput
	}
	return nil
}

func (m *BTCTransaction) GetWalletsOutput() []*BTCTransaction_WalletForTx {
	if m != nil {
		return m.WalletsOutput
	}
	return nil
}

func (m *BTCTransaction) GetResync() bool {
	if m != nil {
		return m.Resync
	}
	return false
}

type BTCTransaction_AddresAmount struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BTCTransaction_AddresAmount) Reset()         { *m = BTCTransaction_AddresAmount{} }
func (m *BTCTransaction_AddresAmount) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction_AddresAmount) ProtoMessage()    {}
func (*BTCTransaction_AddresAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{2, 0}
}

func (m *BTCTransaction_AddresAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Unmarshal(m, b)
}
func (m *BTCTransaction_AddresAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Marshal(b, m, deterministic)
}
func (m *BTCTransaction_AddresAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction_AddresAmount.Merge(m, src)
}
func (m *BTCTransaction_AddresAmount) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Size(m)
}
func (m *BTCTransaction_AddresAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction_AddresAmount.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction_AddresAmount proto.InternalMessageInfo

func (m *BTCTransaction_AddresAmount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BTCTransaction_AddresAmount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type BTCTransaction_WalletForTx struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	TxOutIndex           int32    `protobuf:"varint,3,opt,name=txOutIndex,proto3" json:"txOutIndex,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BTCTransaction_WalletForTx) Reset()         { *m = BTCTransaction_WalletForTx{} }
func (m *BTCTransaction_WalletForTx) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction_WalletForTx) ProtoMessage()    {}
func (*BTCTransaction_WalletForTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{2, 1}
}

func (m *BTCTransaction_WalletForTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Unmarshal(m, b)
}
func (m *BTCTransaction_WalletForTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Marshal(b, m, deterministic)
}
func (m *BTCTransaction_WalletForTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction_WalletForTx.Merge(m, src)
}
func (m *BTCTransaction_WalletForTx) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Size(m)
}
func (m *BTCTransaction_WalletForTx) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction_WalletForTx.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction_WalletForTx proto.InternalMessageInfo

func (m *BTCTransaction_WalletForTx) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *BTCTransaction_WalletForTx) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BTCTransaction_WalletForTx) GetTxOutIndex() int32 {
	if m != nil {
		return m.TxOutIndex
	}
	return 0
}

func (m *BTCTransaction_WalletForTx) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AddSpOut struct {
	TxID                 string   `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	TxOutID              int32    `protobuf:"varint,2,opt,name=txOutID,proto3" json:"txOutID,omitempty"`
	TxOutAmount          int64    `protobuf:"varint,3,opt,name=txOutAmount,proto3" json:"txOutAmount,omitempty"`
	TxOutScript          string   `protobuf:"bytes,4,opt,name=txOutScript,proto3" json:"txOutScript,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	UserID               string   `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	TxStatus             int32    `protobuf:"varint,7,opt,name=txStatus,proto3" json:"txStatus,omitempty"`
	WalletIndex          int32    `protobuf:"varint,8,opt,name=walletIndex,proto3" json:"walletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,9,opt,name=addressIndex,proto3" json:"addressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSpOut) Reset()         { *m = AddSpOut{} }
func (m *AddSpOut) String() string { return proto.CompactTextString(m) }
func (*AddSpOut) ProtoMessage()    {}
func (*AddSpOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{3}
}

func (m *AddSpOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSpOut.Unmarshal(m, b)
}
func (m *AddSpOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSpOut.Marshal(b, m, deterministic)
}
func (m *AddSpOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSpOut.Merge(m, src)
}
func (m *AddSpOut) XXX_Size() int {
	return xxx_messageInfo_AddSpOut.Size(m)
}
func (m *AddSpOut) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSpOut.DiscardUnknown(m)
}

var xxx_messageInfo_AddSpOut proto.InternalMessageInfo

func (m *AddSpOut) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *AddSpOut) GetTxOutID() int32 {
	if m != nil {
		return m.TxOutID
	}
	return 0
}

func (m *AddSpOut) GetTxOutAmount() int64 {
	if m != nil {
		return m.TxOutAmount
	}
	return 0
}

func (m *AddSpOut) GetTxOutScript() string {
	if m != nil {
		return m.TxOutScript
	}
	return ""
}

func (m *AddSpOut) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddSpOut) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddSpOut) GetTxStatus() int32 {
	if m != nil {
		return m.TxStatus
	}
	return 0
}

func (m *AddSpOut) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddSpOut) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type Resync struct {
	Txs                  []*BTCTransaction `protobuf:"bytes,1,rep,name=Txs,proto3" json:"Txs,omitempty"`
	SpOuts               []*AddSpOut       `protobuf:"bytes,2,rep,name=SpOuts,proto3" json:"SpOuts,omitempty"`
	SpOutDelete          []*ReqDeleteSpOut `protobuf:"bytes,3,rep,name=SpOutDelete,proto3" json:"SpOutDelete,omitempty"`
	DeleteFromQueue      string            `protobuf:"bytes,4,opt,name=DeleteFromQueue,proto3" json:"DeleteFromQueue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resync) Reset()         { *m = Resync{} }
func (m *Resync) String() string { return proto.CompactTextString(m) }
func (*Resync) ProtoMessage()    {}
func (*Resync) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{4}
}

func (m *Resync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resync.Unmarshal(m, b)
}
func (m *Resync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resync.Marshal(b, m, deterministic)
}
func (m *Resync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resync.Merge(m, src)
}
func (m *Resync) XXX_Size() int {
	return xxx_messageInfo_Resync.Size(m)
}
func (m *Resync) XXX_DiscardUnknown() {
	xxx_messageInfo_Resync.DiscardUnknown(m)
}

var xxx_messageInfo_Resync proto.InternalMessageInfo

func (m *Resync) GetTxs() []*BTCTransaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *Resync) GetSpOuts() []*AddSpOut {
	if m != nil {
		return m.SpOuts
	}
	return nil
}

func (m *Resync) GetSpOutDelete() []*ReqDeleteSpOut {
	if m != nil {
		return m.SpOutDelete
	}
	return nil
}

func (m *Resync) GetDeleteFromQueue() string {
	if m != nil {
		return m.DeleteFromQueue
	}
	return ""
}

type BlockHeight struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeight) Reset()         { *m = BlockHeight{} }
func (m *BlockHeight) String() string { return proto.CompactTextString(m) }
func (*BlockHeight) ProtoMessage()    {}
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{5}
}

func (m *BlockHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeight.Unmarshal(m, b)
}
func (m *BlockHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeight.Marshal(b, m, deterministic)
}
func (m *BlockHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeight.Merge(m, src)
}
func (m *BlockHeight) XXX_Size() int {
	return xxx_messageInfo_BlockHeight.Size(m)
}
func (m *BlockHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeight.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeight proto.InternalMessageInfo

func (m *BlockHeight) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ReqDeleteSpOut struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TxID                 string   `protobuf:"bytes,2,opt,name=txID,proto3" json:"txID,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteSpOut) Reset()         { *m = ReqDeleteSpOut{} }
func (m *ReqDeleteSpOut) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteSpOut) ProtoMessage()    {}
func (*ReqDeleteSpOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{6}
}

func (m *ReqDeleteSpOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteSpOut.Unmarshal(m, b)
}
func (m *ReqDeleteSpOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteSpOut.Marshal(b, m, deterministic)
}
func (m *ReqDeleteSpOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteSpOut.Merge(m, src)
}
func (m *ReqDeleteSpOut) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteSpOut.Size(m)
}
func (m *ReqDeleteSpOut) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteSpOut.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteSpOut proto.InternalMessageInfo

func (m *ReqDeleteSpOut) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ReqDeleteSpOut) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *ReqDeleteSpOut) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MempoolToDelete struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolToDelete) Reset()         { *m = MempoolToDelete{} }
func (m *MempoolToDelete) String() string { return proto.CompactTextString(m) }
func (*MempoolToDelete) ProtoMessage()    {}
func (*MempoolToDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{7}
}

func (m *MempoolToDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolToDelete.Unmarshal(m, b)
}
func (m *MempoolToDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolToDelete.Marshal(b, m, deterministic)
}
func (m *MempoolToDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolToDelete.Merge(m, src)
}
func (m *MempoolToDelete) XXX_Size() int {
	return xxx_messageInfo_MempoolToDelete.Size(m)
}
func (m *MempoolToDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolToDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolToDelete proto.InternalMessageInfo

func (m *MempoolToDelete) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type WatchAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,3,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,4,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchAddress) Reset()         { *m = WatchAddress{} }
func (m *WatchAddress) String() string { return proto.CompactTextString(m) }
func (*WatchAddress) ProtoMessage()    {}
func (*WatchAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{8}
}

func (m *WatchAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchAddress.Unmarshal(m, b)
}
func (m *WatchAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchAddress.Marshal(b, m, deterministic)
}
func (m *WatchAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchAddress.Merge(m, src)
}
func (m *WatchAddress) XXX_Size() int {
	return xxx_messageInfo_WatchAddress.Size(m)
}
func (m *WatchAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchAddress.DiscardUnknown(m)
}

var xxx_messageInfo_WatchAddress proto.InternalMessageInfo

func (m *WatchAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WatchAddress) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WatchAddress) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *WatchAddress) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type MempoolRecord struct {
	Category             int32    `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	HashTX               string   `protobuf:"bytes,2,opt,name=hashTX,proto3" json:"hashTX,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolRecord) Reset()         { *m = MempoolRecord{} }
func (m *MempoolRecord) String() string { return proto.CompactTextString(m) }
func (*MempoolRecord) ProtoMessage()    {}
func (*MempoolRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{9}
}

func (m *MempoolRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolRecord.Unmarshal(m, b)
}
func (m *MempoolRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolRecord.Marshal(b, m, deterministic)
}
func (m *MempoolRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolRecord.Merge(m, src)
}
func (m *MempoolRecord) XXX_Size() int {
	return xxx_messageInfo_MempoolRecord.Size(m)
}
func (m *MempoolRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolRecord proto.InternalMessageInfo

func (m *MempoolRecord) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *MempoolRecord) GetHashTX() string {
	if m != nil {
		return m.HashTX
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{10}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type RawTx struct {
	Transaction          string   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTx) Reset()         { *m = RawTx{} }
func (m *RawTx) String() string { return proto.CompactTextString(m) }
func (*RawTx) ProtoMessage()    {}
func (*RawTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{11}
}

func (m *RawTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTx.Unmarshal(m, b)
}
func (m *RawTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTx.Marshal(b, m, deterministic)
}
func (m *RawTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTx.Merge(m, src)
}
func (m *RawTx) XXX_Size() int {
	return xxx_messageInfo_RawTx.Size(m)
}
func (m *RawTx) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTx.DiscardUnknown(m)
}

var xxx_messageInfo_RawTx proto.InternalMessageInfo

func (m *RawTx) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

type AddressToResync struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,3,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,4,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressToResync) Reset()         { *m = AddressToResync{} }
func (m *AddressToResync) String() string { return proto.CompactTextString(m) }
func (*AddressToResync) ProtoMessage()    {}
func (*AddressToResync) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{12}
}

func (m *AddressToResync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressToResync.Unmarshal(m, b)
}
func (m *AddressToResync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressToResync.Marshal(b, m, deterministic)
}
func (m *AddressToResync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressToResync.Merge(m, src)
}
func (m *AddressToResync) XXX_Size() int {
	return xxx_messageInfo_AddressToResync.Size(m)
}
func (m *AddressToResync) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressToResync.DiscardUnknown(m)
}

var xxx_messageInfo_AddressToResync proto.InternalMessageInfo

func (m *AddressToResync) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressToResync) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddressToResync) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddressToResync) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type UsersData struct {
	Map                  map[string]*AddressExtended `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UsersData) Reset()         { *m = UsersData{} }
func (m *UsersData) String() string { return proto.CompactTextString(m) }
func (*UsersData) ProtoMessage()    {}
func (*UsersData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{13}
}

func (m *UsersData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersData.Unmarshal(m, b)
}
func (m *UsersData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersData.Marshal(b, m, deterministic)
}
func (m *UsersData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersData.Merge(m, src)
}
func (m *UsersData) XXX_Size() int {
	return xxx_messageInfo_UsersData.Size(m)
}
func (m *UsersData) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersData.DiscardUnknown(m)
}

var xxx_messageInfo_UsersData proto.InternalMessageInfo

func (m *UsersData) GetMap() map[string]*AddressExtended {
	if m != nil {
		return m.Map
	}
	return nil
}

type AddressExtended struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,2,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,3,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressExtended) Reset()         { *m = AddressExtended{} }
func (m *AddressExtended) String() string { return proto.CompactTextString(m) }
func (*AddressExtended) ProtoMessage()    {}
func (*AddressExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{14}
}

func (m *AddressExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressExtended.Unmarshal(m, b)
}
func (m *AddressExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressExtended.Marshal(b, m, deterministic)
}
func (m *AddressExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressExtended.Merge(m, src)
}
func (m *AddressExtended) XXX_Size() int {
	return xxx_messageInfo_AddressExtended.Size(m)
}
func (m *AddressExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressExtended.DiscardUnknown(m)
}

var xxx_messageInfo_AddressExtended proto.InternalMessageInfo

func (m *AddressExtended) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddressExtended) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddressExtended) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type ReplyInfo struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyInfo) Reset()         { *m = ReplyInfo{} }
func (m *ReplyInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyInfo) ProtoMessage()    {}
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{15}
}

func (m *ReplyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyInfo.Unmarshal(m, b)
}
func (m *ReplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyInfo.Marshal(b, m, deterministic)
}
func (m *ReplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyInfo.Merge(m, src)
}
func (m *ReplyInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyInfo.Size(m)
}
func (m *ReplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyInfo proto.InternalMessageInfo

func (m *ReplyInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ServiceVersion struct {
	Branch               string   `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Commit               string   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Buildtime            string   `protobuf:"bytes,3,opt,name=buildtime,proto3" json:"buildtime,omitempty"`
	Lasttag              string   `protobuf:"bytes,4,opt,name=lasttag,proto3" json:"lasttag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceVersion) Reset()         { *m = ServiceVersion{} }
func (m *ServiceVersion) String() string { return proto.CompactTextString(m) }
func (*ServiceVersion) ProtoMessage()    {}
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{16}
}

func (m *ServiceVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceVersion.Unmarshal(m, b)
}
func (m *ServiceVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceVersion.Marshal(b, m, deterministic)
}
func (m *ServiceVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceVersion.Merge(m, src)
}
func (m *ServiceVersion) XXX_Size() int {
	return xxx_messageInfo_ServiceVersion.Size(m)
}
func (m *ServiceVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceVersion proto.InternalMessageInfo

func (m *ServiceVersion) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ServiceVersion) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *ServiceVersion) GetBuildtime() string {
	if m != nil {
		return m.Buildtime
	}
	return ""
}

func (m *ServiceVersion) GetLasttag() string {
	if m != nil {
		return m.Lasttag
	}
	return ""
}

func init() {
	proto.RegisterType((*TxsToCheck)(nil), "nsbtcprotobuf.TxsToCheck")
	proto.RegisterType((*RejectedTxs)(nil), "nsbtcprotobuf.RejectedTxs")
	proto.RegisterType((*BTCTransaction)(nil), "nsbtcprotobuf.BTCTransaction")
	proto.RegisterType((*BTCTransaction_AddresAmount)(nil), "nsbtcprotobuf.BTCTransaction.AddresAmount")
	proto.RegisterType((*BTCTransaction_WalletForTx)(nil), "nsbtcprotobuf.BTCTransaction.WalletForTx")
	proto.RegisterType((*AddSpOut)(nil), "nsbtcprotobuf.AddSpOut")
	proto.RegisterType((*Resync)(nil), "nsbtcprotobuf.Resync")
	proto.RegisterType((*BlockHeight)(nil), "nsbtcprotobuf.BlockHeight")
	proto.RegisterType((*ReqDeleteSpOut)(nil), "nsbtcprotobuf.ReqDeleteSpOut")
	proto.RegisterType((*MempoolToDelete)(nil), "nsbtcprotobuf.MempoolToDelete")
	proto.RegisterType((*WatchAddress)(nil), "nsbtcprotobuf.WatchAddress")
	proto.RegisterType((*MempoolRecord)(nil), "nsbtcprotobuf.MempoolRecord")
	proto.RegisterType((*Empty)(nil), "nsbtcprotobuf.Empty")
	proto.RegisterType((*RawTx)(nil), "nsbtcprotobuf.RawTx")
	proto.RegisterType((*AddressToResync)(nil), "nsbtcprotobuf.AddressToResync")
	proto.RegisterType((*UsersData)(nil), "nsbtcprotobuf.UsersData")
	proto.RegisterMapType((map[string]*AddressExtended)(nil), "nsbtcprotobuf.UsersData.MapEntry")
	proto.RegisterType((*AddressExtended)(nil), "nsbtcprotobuf.AddressExtended")
	proto.RegisterType((*ReplyInfo)(nil), "nsbtcprotobuf.ReplyInfo")
	proto.RegisterType((*ServiceVersion)(nil), "nsbtcprotobuf.ServiceVersion")
}

func init() { proto.RegisterFile("streamer.proto", fileDescriptor_8b26ab11ddf9501b) }

var fileDescriptor_8b26ab11ddf9501b = []byte{
	// 1250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x5b, 0x73, 0xdb, 0x54,
	0x10, 0x8e, 0xec, 0xf8, 0xb6, 0x8e, 0x9d, 0x72, 0xe8, 0x45, 0x98, 0xd2, 0x31, 0x1a, 0x3a, 0xe3,
	0xf2, 0x90, 0x76, 0x52, 0x1e, 0x18, 0x5e, 0xa8, 0x9b, 0x4b, 0xeb, 0x19, 0x92, 0x80, 0xec, 0x06,
	0x5e, 0x8f, 0xa5, 0x4d, 0x2c, 0xa2, 0x8b, 0x91, 0x8e, 0x12, 0xf9, 0x0f, 0x30, 0xc3, 0x1b, 0x8f,
	0xfc, 0x18, 0xfe, 0x06, 0x3f, 0x85, 0x77, 0xe6, 0x5c, 0x64, 0x1f, 0xd9, 0x8e, 0xdb, 0x74, 0x78,
	0x3b, 0xbb, 0x3a, 0xfb, 0xed, 0xee, 0xb7, 0x17, 0x49, 0xd0, 0x4e, 0x58, 0x8c, 0x34, 0xc0, 0x78,
	0x6f, 0x1a, 0x47, 0x2c, 0x22, 0xad, 0x30, 0x19, 0x33, 0x47, 0x9c, 0xc7, 0xe9, 0x85, 0xd5, 0x05,
	0x18, 0x65, 0xc9, 0x28, 0x3a, 0x98, 0xa0, 0x73, 0x45, 0x08, 0x6c, 0xbf, 0xa5, 0xc9, 0xc4, 0x34,
	0xba, 0xe5, 0x5e, 0xc3, 0x16, 0x67, 0xeb, 0x39, 0x34, 0x6d, 0xfc, 0x15, 0x1d, 0x86, 0xee, 0x28,
	0x4b, 0x48, 0xb7, 0x20, 0xaa, 0x9b, 0xba, 0xca, 0xfa, 0xb7, 0x0a, 0xed, 0xd7, 0xa3, 0x83, 0x51,
	0x4c, 0xc3, 0x84, 0x3a, 0xcc, 0x8b, 0x42, 0xf2, 0x10, 0xaa, 0x69, 0x82, 0xf1, 0xe0, 0xd0, 0x34,
	0xba, 0x46, 0xaf, 0x61, 0x2b, 0x89, 0xfb, 0x63, 0xd9, 0xe0, 0xd0, 0x2c, 0x09, 0xad, 0x38, 0xf3,
	0xbb, 0x2c, 0x13, 0x51, 0x94, 0xe5, 0x5d, 0x29, 0x71, 0xc7, 0x2c, 0x3b, 0x4b, 0xd9, 0xd0, 0x89,
	0xbd, 0x29, 0x33, 0xb7, 0xc5, 0x43, 0x5d, 0x45, 0x1e, 0x43, 0x83, 0x65, 0x7d, 0xd7, 0x8d, 0x31,
	0x49, 0xcc, 0x8a, 0x08, 0x6c, 0xa1, 0x20, 0x1d, 0xa8, 0xb3, 0x6c, 0xc8, 0x28, 0x4b, 0x13, 0xb3,
	0xda, 0x35, 0x7a, 0x15, 0x7b, 0x2e, 0xcf, 0xb1, 0xfb, 0x41, 0x94, 0x86, 0xcc, 0xac, 0x75, 0x8d,
	0x5e, 0xd9, 0xd6, 0x55, 0x1c, 0x7b, 0xec, 0x47, 0xce, 0xd5, 0xc8, 0x0b, 0xd0, 0xac, 0x8b, 0xe7,
	0x0b, 0x05, 0xb7, 0x17, 0xc2, 0x5b, 0xf4, 0x2e, 0x27, 0xcc, 0x6c, 0x48, 0x7b, 0x4d, 0x45, 0xbe,
	0x82, 0x96, 0x13, 0x85, 0x17, 0x5e, 0x1c, 0x50, 0xce, 0x48, 0x62, 0x82, 0x08, 0xa1, 0xa8, 0x24,
	0xf7, 0xa1, 0xc2, 0xb2, 0x63, 0x44, 0xb3, 0x29, 0x10, 0xa4, 0xc0, 0xd1, 0x03, 0x0c, 0xa6, 0x51,
	0xe4, 0x0b, 0xef, 0x3b, 0x12, 0x5d, 0x53, 0x91, 0x63, 0x9e, 0xdb, 0x20, 0x9c, 0xa6, 0x2c, 0x31,
	0x5b, 0xdd, 0x72, 0xaf, 0xb9, 0xff, 0xf5, 0x5e, 0xa1, 0xce, 0x7b, 0xc5, 0x82, 0xec, 0x49, 0x52,
	0x64, 0x6e, 0xf6, 0xdc, 0x96, 0xbc, 0x85, 0xc6, 0x88, 0x27, 0x2d, 0x80, 0xda, 0x77, 0x06, 0x5a,
	0x18, 0x93, 0x13, 0xd8, 0xf9, 0x99, 0xfa, 0x3e, 0xb2, 0x44, 0x40, 0x9b, 0xbb, 0x02, 0xec, 0xd9,
	0x66, 0x30, 0x69, 0x71, 0x1c, 0xc5, 0xa3, 0xcc, 0x2e, 0x98, 0x93, 0x33, 0x68, 0x29, 0x59, 0x3a,
	0x30, 0xef, 0xdd, 0x15, 0xaf, 0x68, 0xcf, 0xbb, 0x2c, 0xc6, 0x64, 0x16, 0x3a, 0xe6, 0x27, 0x5d,
	0xa3, 0x57, 0xb7, 0x95, 0xd4, 0x79, 0x05, 0x3b, 0x7a, 0x4a, 0xc4, 0x84, 0x1a, 0x55, 0x1d, 0x25,
	0x5b, 0x37, 0x17, 0x39, 0x02, 0x95, 0xed, 0x52, 0x12, 0x05, 0x51, 0x52, 0xe7, 0x06, 0x9a, 0x9a,
	0xdf, 0xbc, 0xf5, 0x3d, 0x57, 0x6f, 0x7d, 0xcf, 0xd5, 0x81, 0x4b, 0x45, 0xe0, 0x27, 0x00, 0xa2,
	0xf3, 0x06, 0xa1, 0x8b, 0x99, 0x18, 0x82, 0x8a, 0xad, 0x69, 0x34, 0xc7, 0xdb, 0xba, 0x63, 0xeb,
	0xcf, 0x12, 0xd4, 0xfb, 0xae, 0x3b, 0x9c, 0x9e, 0xa5, 0x6c, 0x3e, 0x59, 0x86, 0x36, 0x59, 0x26,
	0xd4, 0x24, 0x8c, 0x1c, 0xb8, 0x8a, 0x9d, 0x8b, 0xcb, 0xfd, 0x5f, 0x5e, 0xed, 0xff, 0xf7, 0x4f,
	0x9f, 0x96, 0x50, 0x65, 0x85, 0x29, 0x35, 0xfd, 0xd5, 0xc2, 0xf4, 0xeb, 0x13, 0x59, 0x5b, 0x9d,
	0xc8, 0x1b, 0xc1, 0xa2, 0x64, 0xa1, 0x2e, 0x1e, 0xeb, 0x2a, 0x62, 0xc1, 0x8e, 0x72, 0x20, 0xaf,
	0x34, 0xc4, 0x95, 0x82, 0xce, 0xfa, 0xc7, 0x80, 0xaa, 0x2d, 0x0a, 0x4b, 0x9e, 0x43, 0x39, 0xdf,
	0x57, 0xcd, 0xfd, 0x2f, 0x36, 0xf6, 0x8d, 0xcd, 0x6f, 0x92, 0xe7, 0x50, 0x15, 0x54, 0xf2, 0xfa,
	0x70, 0x9b, 0x47, 0x4b, 0x36, 0x39, 0xd5, 0xb6, 0xba, 0x46, 0xbe, 0x87, 0xa6, 0x38, 0x1d, 0xa2,
	0x8f, 0x0c, 0xcd, 0xf2, 0x5a, 0x4f, 0x36, 0xfe, 0x26, 0x9f, 0x4b, 0x5b, 0xdd, 0x82, 0xf4, 0x60,
	0x57, 0x9e, 0x8e, 0xe3, 0x28, 0xf8, 0x29, 0xc5, 0x14, 0x15, 0xcf, 0xcb, 0x6a, 0xeb, 0x29, 0x34,
	0x5f, 0x6b, 0xcb, 0xe5, 0x21, 0x54, 0x27, 0x72, 0xf3, 0x18, 0xb2, 0x23, 0xa4, 0x64, 0x9d, 0x43,
	0xbb, 0xe8, 0xef, 0x4e, 0x8b, 0x58, 0x2b, 0x68, 0xb9, 0x50, 0x50, 0xeb, 0x29, 0xec, 0x9e, 0xa8,
	0xed, 0x13, 0xa9, 0xd8, 0x09, 0x6c, 0x4f, 0xe4, 0x9b, 0x43, 0x00, 0xf0, 0xb3, 0xf5, 0xbb, 0xc1,
	0x97, 0x00, 0x73, 0x26, 0xf9, 0x0a, 0xde, 0x38, 0x4c, 0x2a, 0xae, 0x52, 0x21, 0xae, 0x6e, 0x3e,
	0x4c, 0xfa, 0x30, 0xe8, 0x2a, 0xde, 0x06, 0x7d, 0xbd, 0x0d, 0xb6, 0x65, 0x1b, 0xe8, 0x3a, 0xeb,
	0x00, 0x5a, 0x2a, 0x5e, 0x1b, 0x9d, 0x28, 0x76, 0x79, 0xe7, 0x39, 0x94, 0xe1, 0x65, 0x14, 0xcf,
	0x44, 0x24, 0x15, 0x7b, 0x2e, 0x0b, 0x32, 0x69, 0x32, 0x19, 0xfd, 0x92, 0x87, 0x22, 0x25, 0xab,
	0x06, 0x95, 0xa3, 0x60, 0xca, 0x66, 0xd6, 0x33, 0xa8, 0xd8, 0xf4, 0x66, 0x94, 0x89, 0x99, 0x58,
	0x74, 0x8d, 0x4a, 0x49, 0x57, 0x59, 0x7f, 0x18, 0xb0, 0xab, 0x22, 0x19, 0x45, 0xaa, 0x11, 0x4d,
	0xa8, 0xf5, 0x8b, 0x24, 0xf4, 0x17, 0x24, 0xbc, 0x2b, 0x90, 0xf0, 0xee, 0xff, 0x24, 0xe1, 0x2f,
	0x03, 0x1a, 0x1c, 0x30, 0x39, 0xa4, 0x8c, 0x92, 0x97, 0x50, 0x0e, 0xe8, 0x54, 0x8d, 0xc3, 0x97,
	0x4b, 0x4d, 0x3a, 0xbf, 0xb6, 0x77, 0x42, 0xa7, 0x47, 0x21, 0x8b, 0x67, 0x36, 0xbf, 0xdd, 0x39,
	0x87, 0x7a, 0xae, 0x20, 0xf7, 0xa0, 0x7c, 0x85, 0x33, 0x95, 0x02, 0x3f, 0x92, 0x6f, 0xa0, 0x72,
	0x4d, 0xfd, 0x14, 0x45, 0xf4, 0xcd, 0xfd, 0x27, 0xab, 0xf3, 0xc2, 0x83, 0x39, 0xca, 0x18, 0x86,
	0x2e, 0xba, 0xb6, 0xbc, 0xfc, 0x5d, 0xe9, 0x5b, 0xc3, 0x8a, 0xe6, 0x2c, 0xe5, 0x4f, 0x35, 0x2e,
	0x8c, 0x4d, 0x5c, 0x94, 0xde, 0xcf, 0x45, 0x79, 0x0d, 0x17, 0x4f, 0xa1, 0x61, 0xe3, 0xd4, 0x9f,
	0x0d, 0xc2, 0x8b, 0x88, 0x17, 0x24, 0xc0, 0x24, 0xa1, 0x97, 0x98, 0x17, 0x44, 0x89, 0x56, 0x06,
	0xed, 0x21, 0xc6, 0xd7, 0x9e, 0x83, 0xe7, 0x18, 0x27, 0xea, 0x43, 0x66, 0x1c, 0xd3, 0xd0, 0xc9,
	0x1b, 0x5d, 0x49, 0x5c, 0xef, 0x44, 0x41, 0xe0, 0xb1, 0xbc, 0x74, 0x52, 0x12, 0x9f, 0x0d, 0xa9,
	0xe7, 0xbb, 0x8c, 0xbf, 0xb8, 0xe5, 0x14, 0x2d, 0x14, 0xdc, 0xb3, 0x4f, 0x13, 0xc6, 0xe8, 0xa5,
	0x1a, 0xf4, 0x5c, 0xdc, 0xff, 0xbb, 0x01, 0xe4, 0x34, 0x72, 0xf1, 0x20, 0x0a, 0x82, 0x34, 0xf4,
	0x1c, 0xf5, 0x7d, 0x70, 0x08, 0x4d, 0x15, 0x90, 0x88, 0xfc, 0xfe, 0x12, 0xc5, 0xa2, 0x3f, 0x3b,
	0xcb, 0x2b, 0xa7, 0x98, 0x82, 0xb5, 0x45, 0xde, 0xc0, 0xee, 0xd1, 0x35, 0x86, 0x6c, 0x10, 0x7a,
	0xcc, 0xa3, 0x7e, 0xdf, 0x75, 0x89, 0x79, 0x5b, 0x07, 0x74, 0xcc, 0x95, 0x05, 0xa6, 0x78, 0xb3,
	0xb6, 0xc8, 0x01, 0x34, 0x86, 0xb3, 0xd0, 0xe1, 0x2b, 0x1b, 0x49, 0x67, 0x79, 0xa7, 0x2e, 0x16,
	0xd4, 0x46, 0x90, 0x13, 0x20, 0x22, 0x9a, 0xbe, 0xeb, 0x9e, 0xe2, 0x4d, 0x3e, 0x0b, 0x9f, 0x2f,
	0x59, 0xe8, 0x7b, 0x64, 0x23, 0xdc, 0x00, 0x3e, 0x15, 0x70, 0x6f, 0x90, 0xe9, 0x2b, 0x72, 0x3d,
	0x55, 0x1b, 0x62, 0xb6, 0xb6, 0xc8, 0x0f, 0x2a, 0xb2, 0x37, 0xc8, 0xfa, 0xbe, 0xaf, 0x36, 0xc8,
	0x2d, 0x48, 0x8f, 0x97, 0xb4, 0x85, 0x7d, 0x63, 0x6d, 0xbd, 0x30, 0xc8, 0x19, 0x3c, 0xc8, 0xf3,
	0x2c, 0x2e, 0xa3, 0x8f, 0x05, 0x3c, 0x55, 0xe1, 0xc9, 0x0d, 0xbc, 0x39, 0xbc, 0x27, 0xeb, 0xd1,
	0xf2, 0xf5, 0x2d, 0xf0, 0x7e, 0x54, 0x78, 0x72, 0x4f, 0xe5, 0x85, 0xb8, 0x65, 0x8c, 0xf3, 0x75,
	0xb6, 0xb1, 0x16, 0xaf, 0xa1, 0x2d, 0x10, 0x87, 0x18, 0xba, 0x72, 0x65, 0x2e, 0x47, 0x27, 0xb4,
	0x1b, 0x31, 0x6c, 0x78, 0xa4, 0x65, 0x39, 0x9c, 0x62, 0xe8, 0xd2, 0xb1, 0x8f, 0xfc, 0x65, 0xf6,
	0x61, 0xed, 0x5f, 0x7c, 0x03, 0x8a, 0x4c, 0x8f, 0xa0, 0x25, 0x30, 0x4f, 0xf1, 0x46, 0x54, 0xfc,
	0x63, 0xba, 0xe3, 0x85, 0x41, 0x06, 0x70, 0x3f, 0xaf, 0xe8, 0x07, 0xc4, 0x75, 0xdb, 0xf7, 0x83,
	0x80, 0x7a, 0x05, 0x95, 0x53, 0x5c, 0x47, 0xd0, 0xfa, 0x9c, 0x8a, 0xdf, 0x2b, 0x0a, 0xa1, 0x55,
	0x2c, 0xdc, 0x7a, 0xa4, 0x07, 0x2b, 0xec, 0x70, 0x1b, 0x95, 0x4e, 0x5b, 0xfc, 0x05, 0xca, 0x7f,
	0x39, 0xfe, 0x09, 0xf4, 0xd9, 0xd2, 0xe5, 0xc5, 0x9f, 0xe2, 0x0a, 0x37, 0xfa, 0x0f, 0xe0, 0xd6,
	0xb8, 0x2a, 0xf4, 0x2f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xea, 0xbd, 0xe0, 0x7d, 0x0e,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeCommunicationsClient is the client API for NodeCommunications service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeCommunicationsClient interface {
	ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error)
	EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error)
	SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error)
	EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventGetAllMempoolClient, error)
	EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddMempoolRecordClient, error)
	EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteMempoolClient, error)
	EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventDeleteSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteSpendableOutClient, error)
	EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventNewBlockClient, error)
	EventAddSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddSpendableOutClient, error)
	NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewTxClient, error)
	ResyncAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_ResyncAddressClient, error)
	CheckRejectTxs(ctx context.Context, in *TxsToCheck, opts ...grpc.CallOption) (*RejectedTxs, error)
}

type nodeCommunicationsClient struct {
	cc *grpc.ClientConn
}

func NewNodeCommunicationsClient(cc *grpc.ClientConn) NodeCommunicationsClient {
	return &nodeCommunicationsClient{cc}
}

func (c *nodeCommunicationsClient) ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error) {
	out := new(ServiceVersion)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/ServiceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/EventInitialAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/SyncState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/EventAddNewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error) {
	out := new(BlockHeight)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/EventGetBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventGetAllMempoolClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[0], "/nsbtcprotobuf.NodeCommunications/EventGetAllMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventGetAllMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventGetAllMempoolClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommunicationsEventGetAllMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventGetAllMempoolClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddMempoolRecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[1], "/nsbtcprotobuf.NodeCommunications/EventAddMempoolRecord", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventAddMempoolRecordClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventAddMempoolRecordClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommunicationsEventAddMempoolRecordClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventAddMempoolRecordClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteMempoolClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[2], "/nsbtcprotobuf.NodeCommunications/EventDeleteMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventDeleteMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventDeleteMempoolClient interface {
	Recv() (*MempoolToDelete, error)
	grpc.ClientStream
}

type nodeCommunicationsEventDeleteMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventDeleteMempoolClient) Recv() (*MempoolToDelete, error) {
	m := new(MempoolToDelete)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/EventResyncAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/EventSendRawTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventDeleteSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteSpendableOutClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[3], "/nsbtcprotobuf.NodeCommunications/EventDeleteSpendableOut", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventDeleteSpendableOutClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventDeleteSpendableOutClient interface {
	Recv() (*ReqDeleteSpOut, error)
	grpc.ClientStream
}

type nodeCommunicationsEventDeleteSpendableOutClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventDeleteSpendableOutClient) Recv() (*ReqDeleteSpOut, error) {
	m := new(ReqDeleteSpOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventNewBlockClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[4], "/nsbtcprotobuf.NodeCommunications/EventNewBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventNewBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventNewBlockClient interface {
	Recv() (*BlockHeight, error)
	grpc.ClientStream
}

type nodeCommunicationsEventNewBlockClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventNewBlockClient) Recv() (*BlockHeight, error) {
	m := new(BlockHeight)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventAddSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddSpendableOutClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[5], "/nsbtcprotobuf.NodeCommunications/EventAddSpendableOut", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventAddSpendableOutClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventAddSpendableOutClient interface {
	Recv() (*AddSpOut, error)
	grpc.ClientStream
}

type nodeCommunicationsEventAddSpendableOutClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventAddSpendableOutClient) Recv() (*AddSpOut, error) {
	m := new(AddSpOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewTxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[6], "/nsbtcprotobuf.NodeCommunications/NewTx", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsNewTxClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_NewTxClient interface {
	Recv() (*BTCTransaction, error)
	grpc.ClientStream
}

type nodeCommunicationsNewTxClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsNewTxClient) Recv() (*BTCTransaction, error) {
	m := new(BTCTransaction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) ResyncAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_ResyncAddressClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[7], "/nsbtcprotobuf.NodeCommunications/ResyncAddress", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsResyncAddressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_ResyncAddressClient interface {
	Recv() (*Resync, error)
	grpc.ClientStream
}

type nodeCommunicationsResyncAddressClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsResyncAddressClient) Recv() (*Resync, error) {
	m := new(Resync)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) CheckRejectTxs(ctx context.Context, in *TxsToCheck, opts ...grpc.CallOption) (*RejectedTxs, error) {
	out := new(RejectedTxs)
	err := c.cc.Invoke(ctx, "/nsbtcprotobuf.NodeCommunications/CheckRejectTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeCommunicationsServer is the server API for NodeCommunications service.
type NodeCommunicationsServer interface {
	ServiceInfo(context.Context, *Empty) (*ServiceVersion, error)
	EventInitialAdd(context.Context, *UsersData) (*ReplyInfo, error)
	SyncState(context.Context, *BlockHeight) (*ReplyInfo, error)
	EventAddNewAddress(context.Context, *WatchAddress) (*ReplyInfo, error)
	EventGetBlockHeight(context.Context, *Empty) (*BlockHeight, error)
	EventGetAllMempool(*Empty, NodeCommunications_EventGetAllMempoolServer) error
	EventAddMempoolRecord(*Empty, NodeCommunications_EventAddMempoolRecordServer) error
	EventDeleteMempool(*Empty, NodeCommunications_EventDeleteMempoolServer) error
	EventResyncAddress(context.Context, *AddressToResync) (*ReplyInfo, error)
	EventSendRawTx(context.Context, *RawTx) (*ReplyInfo, error)
	EventDeleteSpendableOut(*Empty, NodeCommunications_EventDeleteSpendableOutServer) error
	EventNewBlock(*Empty, NodeCommunications_EventNewBlockServer) error
	EventAddSpendableOut(*Empty, NodeCommunications_EventAddSpendableOutServer) error
	NewTx(*Empty, NodeCommunications_NewTxServer) error
	ResyncAddress(*Empty, NodeCommunications_ResyncAddressServer) error
	CheckRejectTxs(context.Context, *TxsToCheck) (*RejectedTxs, error)
}

func RegisterNodeCommunicationsServer(s *grpc.Server, srv NodeCommunicationsServer) {
	s.RegisterService(&_NodeCommunications_serviceDesc, srv)
}

func _NodeCommunications_ServiceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).ServiceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/ServiceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).ServiceInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventInitialAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventInitialAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/EventInitialAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventInitialAdd(ctx, req.(*UsersData))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_SyncState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).SyncState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/SyncState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).SyncState(ctx, req.(*BlockHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventAddNewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventAddNewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/EventAddNewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventAddNewAddress(ctx, req.(*WatchAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/EventGetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetBlockHeight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetAllMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventGetAllMempool(m, &nodeCommunicationsEventGetAllMempoolServer{stream})
}

type NodeCommunications_EventGetAllMempoolServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommunicationsEventGetAllMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventGetAllMempoolServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventAddMempoolRecord_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventAddMempoolRecord(m, &nodeCommunicationsEventAddMempoolRecordServer{stream})
}

type NodeCommunications_EventAddMempoolRecordServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommunicationsEventAddMempoolRecordServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventAddMempoolRecordServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventDeleteMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventDeleteMempool(m, &nodeCommunicationsEventDeleteMempoolServer{stream})
}

type NodeCommunications_EventDeleteMempoolServer interface {
	Send(*MempoolToDelete) error
	grpc.ServerStream
}

type nodeCommunicationsEventDeleteMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventDeleteMempoolServer) Send(m *MempoolToDelete) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventResyncAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventResyncAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/EventResyncAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventResyncAddress(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventSendRawTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventSendRawTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/EventSendRawTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventSendRawTx(ctx, req.(*RawTx))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventDeleteSpendableOut_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventDeleteSpendableOut(m, &nodeCommunicationsEventDeleteSpendableOutServer{stream})
}

type NodeCommunications_EventDeleteSpendableOutServer interface {
	Send(*ReqDeleteSpOut) error
	grpc.ServerStream
}

type nodeCommunicationsEventDeleteSpendableOutServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventDeleteSpendableOutServer) Send(m *ReqDeleteSpOut) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventNewBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventNewBlock(m, &nodeCommunicationsEventNewBlockServer{stream})
}

type NodeCommunications_EventNewBlockServer interface {
	Send(*BlockHeight) error
	grpc.ServerStream
}

type nodeCommunicationsEventNewBlockServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventNewBlockServer) Send(m *BlockHeight) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventAddSpendableOut_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventAddSpendableOut(m, &nodeCommunicationsEventAddSpendableOutServer{stream})
}

type NodeCommunications_EventAddSpendableOutServer interface {
	Send(*AddSpOut) error
	grpc.ServerStream
}

type nodeCommunicationsEventAddSpendableOutServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventAddSpendableOutServer) Send(m *AddSpOut) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_NewTx_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).NewTx(m, &nodeCommunicationsNewTxServer{stream})
}

type NodeCommunications_NewTxServer interface {
	Send(*BTCTransaction) error
	grpc.ServerStream
}

type nodeCommunicationsNewTxServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsNewTxServer) Send(m *BTCTransaction) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_ResyncAddress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).ResyncAddress(m, &nodeCommunicationsResyncAddressServer{stream})
}

type NodeCommunications_ResyncAddressServer interface {
	Send(*Resync) error
	grpc.ServerStream
}

type nodeCommunicationsResyncAddressServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsResyncAddressServer) Send(m *Resync) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_CheckRejectTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxsToCheck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).CheckRejectTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsbtcprotobuf.NodeCommunications/CheckRejectTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).CheckRejectTxs(ctx, req.(*TxsToCheck))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeCommunications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nsbtcprotobuf.NodeCommunications",
	HandlerType: (*NodeCommunicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceInfo",
			Handler:    _NodeCommunications_ServiceInfo_Handler,
		},
		{
			MethodName: "EventInitialAdd",
			Handler:    _NodeCommunications_EventInitialAdd_Handler,
		},
		{
			MethodName: "SyncState",
			Handler:    _NodeCommunications_SyncState_Handler,
		},
		{
			MethodName: "EventAddNewAddress",
			Handler:    _NodeCommunications_EventAddNewAddress_Handler,
		},
		{
			MethodName: "EventGetBlockHeight",
			Handler:    _NodeCommunications_EventGetBlockHeight_Handler,
		},
		{
			MethodName: "EventResyncAddress",
			Handler:    _NodeCommunications_EventResyncAddress_Handler,
		},
		{
			MethodName: "EventSendRawTx",
			Handler:    _NodeCommunications_EventSendRawTx_Handler,
		},
		{
			MethodName: "CheckRejectTxs",
			Handler:    _NodeCommunications_CheckRejectTxs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventGetAllMempool",
			Handler:       _NodeCommunications_EventGetAllMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventAddMempoolRecord",
			Handler:       _NodeCommunications_EventAddMempoolRecord_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventDeleteMempool",
			Handler:       _NodeCommunications_EventDeleteMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventDeleteSpendableOut",
			Handler:       _NodeCommunications_EventDeleteSpendableOut_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventNewBlock",
			Handler:       _NodeCommunications_EventNewBlock_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventAddSpendableOut",
			Handler:       _NodeCommunications_EventAddSpendableOut_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NewTx",
			Handler:       _NodeCommunications_NewTx_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ResyncAddress",
			Handler:       _NodeCommunications_ResyncAddress_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "streamer.proto",
}
