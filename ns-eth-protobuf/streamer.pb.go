// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streamer.proto

package nsethprotobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IsEmpty struct {
	Empty                bool     `protobuf:"varint,1,opt,name=Empty,proto3" json:"Empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsEmpty) Reset()         { *m = IsEmpty{} }
func (m *IsEmpty) String() string { return proto.CompactTextString(m) }
func (*IsEmpty) ProtoMessage()    {}
func (*IsEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{0}
}

func (m *IsEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsEmpty.Unmarshal(m, b)
}
func (m *IsEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsEmpty.Marshal(b, m, deterministic)
}
func (m *IsEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsEmpty.Merge(m, src)
}
func (m *IsEmpty) XXX_Size() int {
	return xxx_messageInfo_IsEmpty.Size(m)
}
func (m *IsEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_IsEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_IsEmpty proto.InternalMessageInfo

func (m *IsEmpty) GetEmpty() bool {
	if m != nil {
		return m.Empty
	}
	return false
}

type ContractInfo struct {
	ConfirmationsRequired int64    `protobuf:"varint,1,opt,name=ConfirmationsRequired,proto3" json:"ConfirmationsRequired,omitempty"`
	ContractOwners        []string `protobuf:"bytes,2,rep,name=ContractOwners,proto3" json:"ContractOwners,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ContractInfo) Reset()         { *m = ContractInfo{} }
func (m *ContractInfo) String() string { return proto.CompactTextString(m) }
func (*ContractInfo) ProtoMessage()    {}
func (*ContractInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{1}
}

func (m *ContractInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractInfo.Unmarshal(m, b)
}
func (m *ContractInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractInfo.Marshal(b, m, deterministic)
}
func (m *ContractInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractInfo.Merge(m, src)
}
func (m *ContractInfo) XXX_Size() int {
	return xxx_messageInfo_ContractInfo.Size(m)
}
func (m *ContractInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContractInfo proto.InternalMessageInfo

func (m *ContractInfo) GetConfirmationsRequired() int64 {
	if m != nil {
		return m.ConfirmationsRequired
	}
	return 0
}

func (m *ContractInfo) GetContractOwners() []string {
	if m != nil {
		return m.ContractOwners
	}
	return nil
}

type TokenInfo struct {
	ContractAddress      string   `protobuf:"bytes,1,opt,name=ContractAddress,proto3" json:"ContractAddress,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenInfo) Reset()         { *m = TokenInfo{} }
func (m *TokenInfo) String() string { return proto.CompactTextString(m) }
func (*TokenInfo) ProtoMessage()    {}
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{2}
}

func (m *TokenInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenInfo.Unmarshal(m, b)
}
func (m *TokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenInfo.Marshal(b, m, deterministic)
}
func (m *TokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenInfo.Merge(m, src)
}
func (m *TokenInfo) XXX_Size() int {
	return xxx_messageInfo_TokenInfo.Size(m)
}
func (m *TokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TokenInfo proto.InternalMessageInfo

func (m *TokenInfo) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *TokenInfo) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type RejectedTxs struct {
	RejectedTxs          []string `protobuf:"bytes,1,rep,name=RejectedTxs,proto3" json:"RejectedTxs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RejectedTxs) Reset()         { *m = RejectedTxs{} }
func (m *RejectedTxs) String() string { return proto.CompactTextString(m) }
func (*RejectedTxs) ProtoMessage()    {}
func (*RejectedTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{3}
}

func (m *RejectedTxs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RejectedTxs.Unmarshal(m, b)
}
func (m *RejectedTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RejectedTxs.Marshal(b, m, deterministic)
}
func (m *RejectedTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejectedTxs.Merge(m, src)
}
func (m *RejectedTxs) XXX_Size() int {
	return xxx_messageInfo_RejectedTxs.Size(m)
}
func (m *RejectedTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_RejectedTxs.DiscardUnknown(m)
}

var xxx_messageInfo_RejectedTxs proto.InternalMessageInfo

func (m *RejectedTxs) GetRejectedTxs() []string {
	if m != nil {
		return m.RejectedTxs
	}
	return nil
}

type TxsToCheck struct {
	Hash                 []string `protobuf:"bytes,1,rep,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxsToCheck) Reset()         { *m = TxsToCheck{} }
func (m *TxsToCheck) String() string { return proto.CompactTextString(m) }
func (*TxsToCheck) ProtoMessage()    {}
func (*TxsToCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{4}
}

func (m *TxsToCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxsToCheck.Unmarshal(m, b)
}
func (m *TxsToCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxsToCheck.Marshal(b, m, deterministic)
}
func (m *TxsToCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxsToCheck.Merge(m, src)
}
func (m *TxsToCheck) XXX_Size() int {
	return xxx_messageInfo_TxsToCheck.Size(m)
}
func (m *TxsToCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_TxsToCheck.DiscardUnknown(m)
}

var xxx_messageInfo_TxsToCheck proto.InternalMessageInfo

func (m *TxsToCheck) GetHash() []string {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Multisig struct {
	Confirmations        int64    `protobuf:"varint,1,opt,name=Confirmations,proto3" json:"Confirmations,omitempty"`
	FactoryAddress       string   `protobuf:"bytes,2,opt,name=FactoryAddress,proto3" json:"FactoryAddress,omitempty"`
	TxOfCreation         string   `protobuf:"bytes,3,opt,name=TxOfCreation,proto3" json:"TxOfCreation,omitempty"`
	Contract             string   `protobuf:"bytes,4,opt,name=Contract,proto3" json:"Contract,omitempty"`
	DeployStatus         int64    `protobuf:"varint,5,opt,name=DeployStatus,proto3" json:"DeployStatus,omitempty"`
	Addresses            []string `protobuf:"bytes,6,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Multisig) Reset()         { *m = Multisig{} }
func (m *Multisig) String() string { return proto.CompactTextString(m) }
func (*Multisig) ProtoMessage()    {}
func (*Multisig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{5}
}

func (m *Multisig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Multisig.Unmarshal(m, b)
}
func (m *Multisig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Multisig.Marshal(b, m, deterministic)
}
func (m *Multisig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Multisig.Merge(m, src)
}
func (m *Multisig) XXX_Size() int {
	return xxx_messageInfo_Multisig.Size(m)
}
func (m *Multisig) XXX_DiscardUnknown() {
	xxx_messageInfo_Multisig.DiscardUnknown(m)
}

var xxx_messageInfo_Multisig proto.InternalMessageInfo

func (m *Multisig) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *Multisig) GetFactoryAddress() string {
	if m != nil {
		return m.FactoryAddress
	}
	return ""
}

func (m *Multisig) GetTxOfCreation() string {
	if m != nil {
		return m.TxOfCreation
	}
	return ""
}

func (m *Multisig) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *Multisig) GetDeployStatus() int64 {
	if m != nil {
		return m.DeployStatus
	}
	return 0
}

func (m *Multisig) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type Balance struct {
	Balance              string   `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	PendingBalance       string   `protobuf:"bytes,2,opt,name=PendingBalance,proto3" json:"PendingBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{6}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *Balance) GetPendingBalance() string {
	if m != nil {
		return m.PendingBalance
	}
	return ""
}

type Nonce struct {
	Nonce                int64    `protobuf:"varint,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nonce) Reset()         { *m = Nonce{} }
func (m *Nonce) String() string { return proto.CompactTextString(m) }
func (*Nonce) ProtoMessage()    {}
func (*Nonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{7}
}

func (m *Nonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nonce.Unmarshal(m, b)
}
func (m *Nonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nonce.Marshal(b, m, deterministic)
}
func (m *Nonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nonce.Merge(m, src)
}
func (m *Nonce) XXX_Size() int {
	return xxx_messageInfo_Nonce.Size(m)
}
func (m *Nonce) XXX_DiscardUnknown() {
	xxx_messageInfo_Nonce.DiscardUnknown(m)
}

var xxx_messageInfo_Nonce proto.InternalMessageInfo

func (m *Nonce) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type GasPrice struct {
	Gas                  string   `protobuf:"bytes,1,opt,name=Gas,proto3" json:"Gas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPrice) Reset()         { *m = GasPrice{} }
func (m *GasPrice) String() string { return proto.CompactTextString(m) }
func (*GasPrice) ProtoMessage()    {}
func (*GasPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{8}
}

func (m *GasPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPrice.Unmarshal(m, b)
}
func (m *GasPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPrice.Marshal(b, m, deterministic)
}
func (m *GasPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPrice.Merge(m, src)
}
func (m *GasPrice) XXX_Size() int {
	return xxx_messageInfo_GasPrice.Size(m)
}
func (m *GasPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPrice.DiscardUnknown(m)
}

var xxx_messageInfo_GasPrice proto.InternalMessageInfo

func (m *GasPrice) GetGas() string {
	if m != nil {
		return m.Gas
	}
	return ""
}

type BlockHeight struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeight) Reset()         { *m = BlockHeight{} }
func (m *BlockHeight) String() string { return proto.CompactTextString(m) }
func (*BlockHeight) ProtoMessage()    {}
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{9}
}

func (m *BlockHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeight.Unmarshal(m, b)
}
func (m *BlockHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeight.Marshal(b, m, deterministic)
}
func (m *BlockHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeight.Merge(m, src)
}
func (m *BlockHeight) XXX_Size() int {
	return xxx_messageInfo_BlockHeight.Size(m)
}
func (m *BlockHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeight.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeight proto.InternalMessageInfo

func (m *BlockHeight) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ETHTransaction struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,2,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,3,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	Hash                 string   `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
	From                 string   `protobuf:"bytes,5,opt,name=From,proto3" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,6,opt,name=To,proto3" json:"To,omitempty"`
	Amount               string   `protobuf:"bytes,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Input                string   `protobuf:"bytes,8,opt,name=input,proto3" json:"input,omitempty"`
	GasPrice             int64    `protobuf:"varint,9,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasLimit             int64    `protobuf:"varint,10,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Nonce                int32    `protobuf:"varint,11,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Status               int32    `protobuf:"varint,12,opt,name=Status,proto3" json:"Status,omitempty"`
	BlockTime            int64    `protobuf:"varint,13,opt,name=BlockTime,proto3" json:"BlockTime,omitempty"`
	TxpoolTime           int64    `protobuf:"varint,14,opt,name=TxpoolTime,proto3" json:"TxpoolTime,omitempty"`
	BlockHeight          int64    `protobuf:"varint,15,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Resync               bool     `protobuf:"varint,16,opt,name=Resync,proto3" json:"Resync,omitempty"`
	Multisig             bool     `protobuf:"varint,17,opt,name=Multisig,proto3" json:"Multisig,omitempty"`
	Contract             string   `protobuf:"bytes,18,opt,name=Contract,proto3" json:"Contract,omitempty"`
	MethodInvoked        string   `protobuf:"bytes,19,opt,name=MethodInvoked,proto3" json:"MethodInvoked,omitempty"`
	Return               string   `protobuf:"bytes,20,opt,name=return,proto3" json:"return,omitempty"`
	InvocationStatus     bool     `protobuf:"varint,21,opt,name=InvocationStatus,proto3" json:"InvocationStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETHTransaction) Reset()         { *m = ETHTransaction{} }
func (m *ETHTransaction) String() string { return proto.CompactTextString(m) }
func (*ETHTransaction) ProtoMessage()    {}
func (*ETHTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{10}
}

func (m *ETHTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETHTransaction.Unmarshal(m, b)
}
func (m *ETHTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETHTransaction.Marshal(b, m, deterministic)
}
func (m *ETHTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETHTransaction.Merge(m, src)
}
func (m *ETHTransaction) XXX_Size() int {
	return xxx_messageInfo_ETHTransaction.Size(m)
}
func (m *ETHTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_ETHTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_ETHTransaction proto.InternalMessageInfo

func (m *ETHTransaction) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ETHTransaction) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *ETHTransaction) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

func (m *ETHTransaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ETHTransaction) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ETHTransaction) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ETHTransaction) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ETHTransaction) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ETHTransaction) GetGasPrice() int64 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *ETHTransaction) GetGasLimit() int64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *ETHTransaction) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ETHTransaction) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ETHTransaction) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ETHTransaction) GetTxpoolTime() int64 {
	if m != nil {
		return m.TxpoolTime
	}
	return 0
}

func (m *ETHTransaction) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ETHTransaction) GetResync() bool {
	if m != nil {
		return m.Resync
	}
	return false
}

func (m *ETHTransaction) GetMultisig() bool {
	if m != nil {
		return m.Multisig
	}
	return false
}

func (m *ETHTransaction) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *ETHTransaction) GetMethodInvoked() string {
	if m != nil {
		return m.MethodInvoked
	}
	return ""
}

func (m *ETHTransaction) GetReturn() string {
	if m != nil {
		return m.Return
	}
	return ""
}

func (m *ETHTransaction) GetInvocationStatus() bool {
	if m != nil {
		return m.InvocationStatus
	}
	return false
}

type ERC20Info struct {
	History              []*ERC20History  `protobuf:"bytes,1,rep,name=History,proto3" json:"History,omitempty"`
	Balances             []*ERC20Balances `protobuf:"bytes,2,rep,name=Balances,proto3" json:"Balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ERC20Info) Reset()         { *m = ERC20Info{} }
func (m *ERC20Info) String() string { return proto.CompactTextString(m) }
func (*ERC20Info) ProtoMessage()    {}
func (*ERC20Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{11}
}

func (m *ERC20Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20Info.Unmarshal(m, b)
}
func (m *ERC20Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20Info.Marshal(b, m, deterministic)
}
func (m *ERC20Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20Info.Merge(m, src)
}
func (m *ERC20Info) XXX_Size() int {
	return xxx_messageInfo_ERC20Info.Size(m)
}
func (m *ERC20Info) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20Info.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20Info proto.InternalMessageInfo

func (m *ERC20Info) GetHistory() []*ERC20History {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *ERC20Info) GetBalances() []*ERC20Balances {
	if m != nil {
		return m.Balances
	}
	return nil
}

type ERC20Balances struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ERC20Balances) Reset()         { *m = ERC20Balances{} }
func (m *ERC20Balances) String() string { return proto.CompactTextString(m) }
func (*ERC20Balances) ProtoMessage()    {}
func (*ERC20Balances) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{12}
}

func (m *ERC20Balances) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20Balances.Unmarshal(m, b)
}
func (m *ERC20Balances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20Balances.Marshal(b, m, deterministic)
}
func (m *ERC20Balances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20Balances.Merge(m, src)
}
func (m *ERC20Balances) XXX_Size() int {
	return xxx_messageInfo_ERC20Balances.Size(m)
}
func (m *ERC20Balances) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20Balances.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20Balances proto.InternalMessageInfo

func (m *ERC20Balances) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ERC20Balances) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type ERC20History struct {
	BlockNumber          string   `protobuf:"bytes,1,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	TimeStamp            string   `protobuf:"bytes,2,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Nonce                string   `protobuf:"bytes,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	From                 string   `protobuf:"bytes,5,opt,name=From,proto3" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,6,opt,name=To,proto3" json:"To,omitempty"`
	ContractAddress      string   `protobuf:"bytes,7,opt,name=ContractAddress,proto3" json:"ContractAddress,omitempty"`
	Value                string   `protobuf:"bytes,8,opt,name=Value,proto3" json:"Value,omitempty"`
	GasPrice             string   `protobuf:"bytes,9,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Gas                  string   `protobuf:"bytes,10,opt,name=Gas,proto3" json:"Gas,omitempty"`
	Input                string   `protobuf:"bytes,11,opt,name=Input,proto3" json:"Input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ERC20History) Reset()         { *m = ERC20History{} }
func (m *ERC20History) String() string { return proto.CompactTextString(m) }
func (*ERC20History) ProtoMessage()    {}
func (*ERC20History) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{13}
}

func (m *ERC20History) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20History.Unmarshal(m, b)
}
func (m *ERC20History) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20History.Marshal(b, m, deterministic)
}
func (m *ERC20History) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20History.Merge(m, src)
}
func (m *ERC20History) XXX_Size() int {
	return xxx_messageInfo_ERC20History.Size(m)
}
func (m *ERC20History) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20History.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20History proto.InternalMessageInfo

func (m *ERC20History) GetBlockNumber() string {
	if m != nil {
		return m.BlockNumber
	}
	return ""
}

func (m *ERC20History) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *ERC20History) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ERC20History) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *ERC20History) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ERC20History) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ERC20History) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *ERC20History) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ERC20History) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *ERC20History) GetGas() string {
	if m != nil {
		return m.Gas
	}
	return ""
}

func (m *ERC20History) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type MultisigInfo struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultisigInfo) Reset()         { *m = MultisigInfo{} }
func (m *MultisigInfo) String() string { return proto.CompactTextString(m) }
func (*MultisigInfo) ProtoMessage()    {}
func (*MultisigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{14}
}

func (m *MultisigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultisigInfo.Unmarshal(m, b)
}
func (m *MultisigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultisigInfo.Marshal(b, m, deterministic)
}
func (m *MultisigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultisigInfo.Merge(m, src)
}
func (m *MultisigInfo) XXX_Size() int {
	return xxx_messageInfo_MultisigInfo.Size(m)
}
func (m *MultisigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MultisigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MultisigInfo proto.InternalMessageInfo

func (m *MultisigInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type MempoolToDelete struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolToDelete) Reset()         { *m = MempoolToDelete{} }
func (m *MempoolToDelete) String() string { return proto.CompactTextString(m) }
func (*MempoolToDelete) ProtoMessage()    {}
func (*MempoolToDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{15}
}

func (m *MempoolToDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolToDelete.Unmarshal(m, b)
}
func (m *MempoolToDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolToDelete.Marshal(b, m, deterministic)
}
func (m *MempoolToDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolToDelete.Merge(m, src)
}
func (m *MempoolToDelete) XXX_Size() int {
	return xxx_messageInfo_MempoolToDelete.Size(m)
}
func (m *MempoolToDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolToDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolToDelete proto.InternalMessageInfo

func (m *MempoolToDelete) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type WatchAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,3,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,4,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchAddress) Reset()         { *m = WatchAddress{} }
func (m *WatchAddress) String() string { return proto.CompactTextString(m) }
func (*WatchAddress) ProtoMessage()    {}
func (*WatchAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{16}
}

func (m *WatchAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchAddress.Unmarshal(m, b)
}
func (m *WatchAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchAddress.Marshal(b, m, deterministic)
}
func (m *WatchAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchAddress.Merge(m, src)
}
func (m *WatchAddress) XXX_Size() int {
	return xxx_messageInfo_WatchAddress.Size(m)
}
func (m *WatchAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchAddress.DiscardUnknown(m)
}

var xxx_messageInfo_WatchAddress proto.InternalMessageInfo

func (m *WatchAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WatchAddress) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WatchAddress) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *WatchAddress) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type MempoolRecord struct {
	Category             int64    `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	HashTX               string   `protobuf:"bytes,2,opt,name=hashTX,proto3" json:"hashTX,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolRecord) Reset()         { *m = MempoolRecord{} }
func (m *MempoolRecord) String() string { return proto.CompactTextString(m) }
func (*MempoolRecord) ProtoMessage()    {}
func (*MempoolRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{17}
}

func (m *MempoolRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolRecord.Unmarshal(m, b)
}
func (m *MempoolRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolRecord.Marshal(b, m, deterministic)
}
func (m *MempoolRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolRecord.Merge(m, src)
}
func (m *MempoolRecord) XXX_Size() int {
	return xxx_messageInfo_MempoolRecord.Size(m)
}
func (m *MempoolRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolRecord proto.InternalMessageInfo

func (m *MempoolRecord) GetCategory() int64 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *MempoolRecord) GetHashTX() string {
	if m != nil {
		return m.HashTX
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{18}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type RawTx struct {
	Transaction          string   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTx) Reset()         { *m = RawTx{} }
func (m *RawTx) String() string { return proto.CompactTextString(m) }
func (*RawTx) ProtoMessage()    {}
func (*RawTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{19}
}

func (m *RawTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTx.Unmarshal(m, b)
}
func (m *RawTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTx.Marshal(b, m, deterministic)
}
func (m *RawTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTx.Merge(m, src)
}
func (m *RawTx) XXX_Size() int {
	return xxx_messageInfo_RawTx.Size(m)
}
func (m *RawTx) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTx.DiscardUnknown(m)
}

var xxx_messageInfo_RawTx proto.InternalMessageInfo

func (m *RawTx) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

type AddressToResync struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressToResync) Reset()         { *m = AddressToResync{} }
func (m *AddressToResync) String() string { return proto.CompactTextString(m) }
func (*AddressToResync) ProtoMessage()    {}
func (*AddressToResync) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{20}
}

func (m *AddressToResync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressToResync.Unmarshal(m, b)
}
func (m *AddressToResync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressToResync.Marshal(b, m, deterministic)
}
func (m *AddressToResync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressToResync.Merge(m, src)
}
func (m *AddressToResync) XXX_Size() int {
	return xxx_messageInfo_AddressToResync.Size(m)
}
func (m *AddressToResync) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressToResync.DiscardUnknown(m)
}

var xxx_messageInfo_AddressToResync proto.InternalMessageInfo

func (m *AddressToResync) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ERC20Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OnlyBalances         bool     `protobuf:"varint,2,opt,name=onlyBalances,proto3" json:"onlyBalances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ERC20Address) Reset()         { *m = ERC20Address{} }
func (m *ERC20Address) String() string { return proto.CompactTextString(m) }
func (*ERC20Address) ProtoMessage()    {}
func (*ERC20Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{21}
}

func (m *ERC20Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20Address.Unmarshal(m, b)
}
func (m *ERC20Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20Address.Marshal(b, m, deterministic)
}
func (m *ERC20Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20Address.Merge(m, src)
}
func (m *ERC20Address) XXX_Size() int {
	return xxx_messageInfo_ERC20Address.Size(m)
}
func (m *ERC20Address) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20Address.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20Address proto.InternalMessageInfo

func (m *ERC20Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ERC20Address) GetOnlyBalances() bool {
	if m != nil {
		return m.OnlyBalances
	}
	return false
}

type UsersData struct {
	Map                  map[string]*AddressExtended `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UsersContracts       map[string]string           `protobuf:"bytes,2,rep,name=UsersContracts,proto3" json:"UsersContracts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UsersData) Reset()         { *m = UsersData{} }
func (m *UsersData) String() string { return proto.CompactTextString(m) }
func (*UsersData) ProtoMessage()    {}
func (*UsersData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{22}
}

func (m *UsersData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersData.Unmarshal(m, b)
}
func (m *UsersData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersData.Marshal(b, m, deterministic)
}
func (m *UsersData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersData.Merge(m, src)
}
func (m *UsersData) XXX_Size() int {
	return xxx_messageInfo_UsersData.Size(m)
}
func (m *UsersData) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersData.DiscardUnknown(m)
}

var xxx_messageInfo_UsersData proto.InternalMessageInfo

func (m *UsersData) GetMap() map[string]*AddressExtended {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *UsersData) GetUsersContracts() map[string]string {
	if m != nil {
		return m.UsersContracts
	}
	return nil
}

type AddressExtended struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,2,opt,name=WalletIndex,proto3" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,3,opt,name=AddressIndex,proto3" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressExtended) Reset()         { *m = AddressExtended{} }
func (m *AddressExtended) String() string { return proto.CompactTextString(m) }
func (*AddressExtended) ProtoMessage()    {}
func (*AddressExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{23}
}

func (m *AddressExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressExtended.Unmarshal(m, b)
}
func (m *AddressExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressExtended.Marshal(b, m, deterministic)
}
func (m *AddressExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressExtended.Merge(m, src)
}
func (m *AddressExtended) XXX_Size() int {
	return xxx_messageInfo_AddressExtended.Size(m)
}
func (m *AddressExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressExtended.DiscardUnknown(m)
}

var xxx_messageInfo_AddressExtended proto.InternalMessageInfo

func (m *AddressExtended) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddressExtended) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddressExtended) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type ReplyInfo struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyInfo) Reset()         { *m = ReplyInfo{} }
func (m *ReplyInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyInfo) ProtoMessage()    {}
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{24}
}

func (m *ReplyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyInfo.Unmarshal(m, b)
}
func (m *ReplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyInfo.Marshal(b, m, deterministic)
}
func (m *ReplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyInfo.Merge(m, src)
}
func (m *ReplyInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyInfo.Size(m)
}
func (m *ReplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyInfo proto.InternalMessageInfo

func (m *ReplyInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ServiceVersion struct {
	Branch               string   `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Commit               string   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Buildtime            string   `protobuf:"bytes,3,opt,name=buildtime,proto3" json:"buildtime,omitempty"`
	Lasttag              string   `protobuf:"bytes,4,opt,name=lasttag,proto3" json:"lasttag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceVersion) Reset()         { *m = ServiceVersion{} }
func (m *ServiceVersion) String() string { return proto.CompactTextString(m) }
func (*ServiceVersion) ProtoMessage()    {}
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{25}
}

func (m *ServiceVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceVersion.Unmarshal(m, b)
}
func (m *ServiceVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceVersion.Marshal(b, m, deterministic)
}
func (m *ServiceVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceVersion.Merge(m, src)
}
func (m *ServiceVersion) XXX_Size() int {
	return xxx_messageInfo_ServiceVersion.Size(m)
}
func (m *ServiceVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceVersion proto.InternalMessageInfo

func (m *ServiceVersion) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ServiceVersion) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *ServiceVersion) GetBuildtime() string {
	if m != nil {
		return m.Buildtime
	}
	return ""
}

func (m *ServiceVersion) GetLasttag() string {
	if m != nil {
		return m.Lasttag
	}
	return ""
}

func init() {
	proto.RegisterType((*IsEmpty)(nil), "nsethprotobuf.IsEmpty")
	proto.RegisterType((*ContractInfo)(nil), "nsethprotobuf.ContractInfo")
	proto.RegisterType((*TokenInfo)(nil), "nsethprotobuf.TokenInfo")
	proto.RegisterType((*RejectedTxs)(nil), "nsethprotobuf.RejectedTxs")
	proto.RegisterType((*TxsToCheck)(nil), "nsethprotobuf.TxsToCheck")
	proto.RegisterType((*Multisig)(nil), "nsethprotobuf.Multisig")
	proto.RegisterType((*Balance)(nil), "nsethprotobuf.Balance")
	proto.RegisterType((*Nonce)(nil), "nsethprotobuf.Nonce")
	proto.RegisterType((*GasPrice)(nil), "nsethprotobuf.GasPrice")
	proto.RegisterType((*BlockHeight)(nil), "nsethprotobuf.BlockHeight")
	proto.RegisterType((*ETHTransaction)(nil), "nsethprotobuf.ETHTransaction")
	proto.RegisterType((*ERC20Info)(nil), "nsethprotobuf.ERC20Info")
	proto.RegisterType((*ERC20Balances)(nil), "nsethprotobuf.ERC20Balances")
	proto.RegisterType((*ERC20History)(nil), "nsethprotobuf.ERC20History")
	proto.RegisterType((*MultisigInfo)(nil), "nsethprotobuf.MultisigInfo")
	proto.RegisterType((*MempoolToDelete)(nil), "nsethprotobuf.MempoolToDelete")
	proto.RegisterType((*WatchAddress)(nil), "nsethprotobuf.WatchAddress")
	proto.RegisterType((*MempoolRecord)(nil), "nsethprotobuf.MempoolRecord")
	proto.RegisterType((*Empty)(nil), "nsethprotobuf.Empty")
	proto.RegisterType((*RawTx)(nil), "nsethprotobuf.RawTx")
	proto.RegisterType((*AddressToResync)(nil), "nsethprotobuf.AddressToResync")
	proto.RegisterType((*ERC20Address)(nil), "nsethprotobuf.ERC20Address")
	proto.RegisterType((*UsersData)(nil), "nsethprotobuf.UsersData")
	proto.RegisterMapType((map[string]*AddressExtended)(nil), "nsethprotobuf.UsersData.MapEntry")
	proto.RegisterMapType((map[string]string)(nil), "nsethprotobuf.UsersData.UsersContractsEntry")
	proto.RegisterType((*AddressExtended)(nil), "nsethprotobuf.AddressExtended")
	proto.RegisterType((*ReplyInfo)(nil), "nsethprotobuf.ReplyInfo")
	proto.RegisterType((*ServiceVersion)(nil), "nsethprotobuf.ServiceVersion")
}

func init() { proto.RegisterFile("streamer.proto", fileDescriptor_8b26ab11ddf9501b) }

var fileDescriptor_8b26ab11ddf9501b = []byte{
	// 1507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x53, 0xdb, 0xc6,
	0x16, 0xb7, 0x31, 0xc6, 0xf8, 0xd8, 0x18, 0xee, 0x86, 0x70, 0x75, 0xb9, 0x49, 0x2e, 0x77, 0x27,
	0xc9, 0xe4, 0xfe, 0x19, 0x9a, 0x21, 0xe9, 0x4c, 0xa6, 0x4f, 0x25, 0x86, 0x80, 0xdb, 0x60, 0x52,
	0xe1, 0x26, 0x7d, 0x5d, 0xa4, 0x05, 0xab, 0x48, 0x5a, 0x57, 0x5a, 0x03, 0x9e, 0xe9, 0x73, 0xfb,
	0x35, 0xfa, 0x15, 0xfa, 0x5d, 0xfa, 0xd4, 0x4f, 0xd3, 0xd9, 0xb3, 0xbb, 0xb2, 0x24, 0x0c, 0xce,
	0xa4, 0xd3, 0xb7, 0x3d, 0x67, 0xcf, 0x9e, 0x3d, 0x7f, 0x7f, 0x67, 0x25, 0xe8, 0xa4, 0x32, 0xe1,
	0x2c, 0xe2, 0xc9, 0xf6, 0x28, 0x11, 0x52, 0x90, 0x95, 0x38, 0xe5, 0x72, 0x88, 0xeb, 0xd3, 0xf1,
	0x19, 0xfd, 0x17, 0x34, 0x7a, 0xe9, 0x7e, 0x34, 0x92, 0x13, 0xb2, 0x0e, 0x75, 0x5c, 0x38, 0xd5,
	0xad, 0xea, 0xb3, 0x65, 0x57, 0x13, 0x34, 0x84, 0x76, 0x57, 0xc4, 0x32, 0x61, 0x9e, 0xec, 0xc5,
	0x67, 0x82, 0xbc, 0x84, 0xfb, 0x5d, 0x11, 0x9f, 0x05, 0x49, 0xc4, 0x64, 0x20, 0xe2, 0xd4, 0xe5,
	0x3f, 0x8c, 0x83, 0x84, 0xfb, 0x78, 0xaa, 0xe6, 0xce, 0xde, 0x24, 0x4f, 0xa1, 0x63, 0xb5, 0x1c,
	0x5f, 0xc5, 0x3c, 0x49, 0x9d, 0x85, 0xad, 0xda, 0xb3, 0xa6, 0x5b, 0xe2, 0xd2, 0x63, 0x68, 0x0e,
	0xc4, 0x05, 0x8f, 0xf1, 0xaa, 0x67, 0xb0, 0x6a, 0xb7, 0x77, 0x7d, 0x3f, 0xe1, 0x69, 0x8a, 0x97,
	0x34, 0xdd, 0x32, 0x9b, 0x38, 0xd0, 0x78, 0xcd, 0x42, 0x16, 0x7b, 0xdc, 0x59, 0x40, 0x09, 0x4b,
	0xd2, 0xcf, 0xa0, 0xe5, 0xf2, 0xef, 0xb9, 0x27, 0xb9, 0x3f, 0xb8, 0x4e, 0xc9, 0x56, 0x81, 0x74,
	0xaa, 0x68, 0x44, 0x9e, 0x45, 0xb7, 0x00, 0x06, 0xd7, 0xe9, 0x40, 0x74, 0x87, 0xdc, 0xbb, 0x20,
	0x04, 0x16, 0x0f, 0x59, 0x3a, 0x34, 0x82, 0xb8, 0xa6, 0xbf, 0x57, 0x61, 0xf9, 0x68, 0x1c, 0xca,
	0x20, 0x0d, 0xce, 0xc9, 0x63, 0x58, 0x29, 0x78, 0x6c, 0xc2, 0x50, 0x64, 0x2a, 0xf7, 0xdf, 0x30,
	0x4f, 0x8a, 0x64, 0x62, 0x1d, 0xd1, 0x66, 0x96, 0xb8, 0x84, 0x42, 0x7b, 0x70, 0x7d, 0x7c, 0xd6,
	0x4d, 0x38, 0x1e, 0x74, 0x6a, 0x28, 0x55, 0xe0, 0x91, 0x4d, 0x58, 0xb6, 0xee, 0x3b, 0x8b, 0xb8,
	0x9f, 0xd1, 0xea, 0xfc, 0x1e, 0x1f, 0x85, 0x62, 0x72, 0x22, 0x99, 0x1c, 0xa7, 0x4e, 0x1d, 0x8d,
	0x29, 0xf0, 0xc8, 0x03, 0x68, 0x9a, 0xeb, 0x78, 0xea, 0x2c, 0xa1, 0x5f, 0x53, 0x06, 0xfd, 0x3a,
	0x8b, 0x64, 0x3e, 0xa8, 0xd5, 0x42, 0x50, 0x95, 0x3b, 0xef, 0x78, 0xec, 0x07, 0xf1, 0x79, 0x31,
	0xea, 0x25, 0x2e, 0x7d, 0x08, 0xf5, 0xbe, 0x50, 0x07, 0xd6, 0xcd, 0xc2, 0x44, 0x47, 0x13, 0xf4,
	0x01, 0x2c, 0x1f, 0xb0, 0xf4, 0x5d, 0x12, 0x78, 0x9c, 0xac, 0x41, 0xed, 0x80, 0xd9, 0xfc, 0xaa,
	0x25, 0x7d, 0x02, 0xad, 0xd7, 0xa1, 0xf0, 0x2e, 0x0e, 0x79, 0x70, 0x3e, 0x94, 0x64, 0x03, 0x96,
	0x86, 0xb8, 0x32, 0x3a, 0x0c, 0x45, 0x7f, 0x5b, 0x84, 0xce, 0xfe, 0xe0, 0x70, 0x90, 0xb0, 0x38,
	0x65, 0x1e, 0x46, 0x68, 0x03, 0x96, 0xbe, 0x4d, 0x79, 0xd2, 0xdb, 0x33, 0xea, 0x0c, 0xa5, 0x92,
	0xff, 0x81, 0x85, 0x21, 0x97, 0xbd, 0xd8, 0xe7, 0xd7, 0x68, 0x73, 0xdd, 0xcd, 0xb3, 0x54, 0xfc,
	0x4c, 0x28, 0xb4, 0x48, 0x0d, 0x45, 0x0a, 0xbc, 0xac, 0x24, 0x74, 0xec, 0x71, 0xad, 0x78, 0x6f,
	0x12, 0x11, 0x61, 0xbc, 0x9b, 0x2e, 0xae, 0x49, 0x07, 0x16, 0x06, 0xc2, 0x59, 0x42, 0xce, 0xc2,
	0x40, 0x28, 0xab, 0x76, 0x23, 0x31, 0x8e, 0xa5, 0xd3, 0xd0, 0x56, 0x69, 0x4a, 0xc5, 0x26, 0x88,
	0x47, 0x63, 0xe9, 0x2c, 0x23, 0x5b, 0x13, 0x2a, 0xcb, 0x36, 0x36, 0x4e, 0x13, 0x1d, 0x9e, 0xc6,
	0x4a, 0xef, 0xbd, 0x0d, 0xa2, 0x40, 0x3a, 0x90, 0xed, 0x21, 0x3d, 0x8d, 0x74, 0x0b, 0x4d, 0x37,
	0xf1, 0xdf, 0x80, 0x25, 0x53, 0x11, 0x6d, 0x64, 0x2f, 0x4d, 0x6b, 0x01, 0x63, 0x3c, 0x08, 0x22,
	0xee, 0xac, 0xa0, 0xaa, 0x29, 0x83, 0x3c, 0x52, 0xad, 0x30, 0x12, 0x22, 0xc4, 0xed, 0x0e, 0x6e,
	0xe7, 0x38, 0x2a, 0x9e, 0xb9, 0x0c, 0x39, 0xab, 0x28, 0x50, 0x4e, 0x9a, 0xcb, 0xd3, 0x49, 0xec,
	0x39, 0x6b, 0x88, 0x29, 0x86, 0x52, 0x1e, 0xd8, 0x0e, 0x72, 0xfe, 0x86, 0x3b, 0xd3, 0x8e, 0xca,
	0xd7, 0x37, 0x29, 0xd5, 0xf7, 0x63, 0x58, 0x39, 0xe2, 0x72, 0x28, 0xfc, 0x5e, 0x7c, 0x29, 0x2e,
	0xb8, 0xef, 0xdc, 0x43, 0x81, 0x22, 0x53, 0xdd, 0x9a, 0x70, 0x39, 0x4e, 0x62, 0x67, 0x5d, 0x47,
	0x5a, 0x53, 0xe4, 0xbf, 0xb0, 0xa6, 0x44, 0x3c, 0xec, 0x23, 0x13, 0x8f, 0xfb, 0x78, 0xfb, 0x0d,
	0x3e, 0xfd, 0x11, 0x9a, 0xfb, 0x6e, 0x77, 0xe7, 0x39, 0x02, 0xd1, 0xe7, 0xd0, 0x38, 0x0c, 0x52,
	0xd5, 0xa8, 0x08, 0x04, 0xad, 0x9d, 0x7f, 0x6e, 0x17, 0x50, 0x74, 0x1b, 0x45, 0x8d, 0x88, 0x6b,
	0x65, 0xc9, 0x2b, 0x58, 0x36, 0x9d, 0xa0, 0xe1, 0xae, 0xb5, 0xf3, 0x60, 0xd6, 0x39, 0x2b, 0xe3,
	0x66, 0xd2, 0xb4, 0x0b, 0x2b, 0x85, 0x2d, 0xd5, 0x8b, 0x45, 0x08, 0x6c, 0xcc, 0x87, 0xbe, 0x5f,
	0x16, 0xa0, 0x9d, 0x37, 0x2c, 0xcb, 0x57, 0x7f, 0x1c, 0x9d, 0xf2, 0xc4, 0x28, 0xca, 0xb3, 0x54,
	0x3d, 0xa8, 0xcc, 0x9e, 0x48, 0x16, 0x8d, 0x8c, 0xba, 0x29, 0x23, 0xab, 0xfc, 0x5a, 0xae, 0xf2,
	0xb3, 0x7a, 0xd3, 0xed, 0x60, 0xea, 0xed, 0x63, 0xfa, 0x61, 0x06, 0xba, 0x37, 0x66, 0xa3, 0xfb,
	0x3a, 0xd4, 0xdf, 0xb3, 0x70, 0xcc, 0x6d, 0x87, 0x20, 0x71, 0xa3, 0x43, 0x9a, 0xee, 0x0d, 0x34,
	0x81, 0x0c, 0x4d, 0x94, 0x8e, 0x1e, 0x76, 0x59, 0x4b, 0xeb, 0x40, 0x82, 0x3e, 0x85, 0xb6, 0xad,
	0x3b, 0x4c, 0xf4, 0x6d, 0x20, 0xf3, 0x04, 0x56, 0x8f, 0x78, 0x84, 0x85, 0x2f, 0xf6, 0x78, 0xc8,
	0x25, 0xba, 0x38, 0xd4, 0x93, 0x01, 0x5d, 0x54, 0x6b, 0xfa, 0x53, 0x15, 0xda, 0x1f, 0x98, 0xf4,
	0x86, 0xb9, 0xe4, 0xb0, 0x62, 0xda, 0x0c, 0xa9, 0x6e, 0x1a, 0x6b, 0x8c, 0xd2, 0x61, 0x36, 0x54,
	0x19, 0xa3, 0x6a, 0xf3, 0x31, 0x6a, 0xf1, 0x26, 0x46, 0xa9, 0xfa, 0x31, 0xf6, 0xba, 0xdc, 0x13,
	0x89, 0xaf, 0x82, 0xe5, 0x31, 0xc9, 0xcf, 0x75, 0x09, 0x23, 0x64, 0x58, 0x1a, 0x9d, 0x66, 0xe9,
	0x70, 0xf0, 0x9d, 0x35, 0x45, 0x53, 0xb4, 0x61, 0xde, 0x03, 0xf4, 0x3f, 0x50, 0x77, 0xd9, 0xd5,
	0xe0, 0x5a, 0x19, 0x27, 0xa7, 0x38, 0x6b, 0x0b, 0x28, 0xc7, 0xa2, 0xff, 0x83, 0x55, 0x63, 0xc8,
	0x40, 0x98, 0x5e, 0xbf, 0x35, 0x06, 0xf4, 0xad, 0xa9, 0xcf, 0xf9, 0xd1, 0xa2, 0xd0, 0x16, 0x71,
	0x38, 0xc9, 0x75, 0x93, 0xea, 0xda, 0x02, 0x8f, 0xfe, 0xba, 0x00, 0x4d, 0x05, 0xf4, 0xe9, 0x1e,
	0x93, 0x8c, 0xbc, 0x80, 0x5a, 0xc4, 0x46, 0xa6, 0x5d, 0xff, 0x5d, 0x6a, 0xbb, 0x4c, 0x6c, 0xfb,
	0x88, 0x8d, 0xf6, 0x63, 0x99, 0x4c, 0x5c, 0x25, 0x4d, 0x06, 0xd0, 0xc1, 0x2d, 0x5b, 0x80, 0xb6,
	0x6d, 0xff, 0x7f, 0xeb, 0xf9, 0xa2, 0xb8, 0x56, 0x55, 0xd2, 0xb1, 0xf9, 0x1e, 0x96, 0xed, 0x35,
	0xaa, 0x30, 0x2f, 0xf8, 0xc4, 0x8e, 0xb9, 0x0b, 0x3e, 0x21, 0x2f, 0xa1, 0x7e, 0x89, 0xc5, 0xad,
	0x7c, 0x6a, 0xed, 0x3c, 0x2a, 0x5d, 0x65, 0x62, 0xb3, 0x7f, 0x2d, 0x79, 0xec, 0x73, 0xdf, 0xd5,
	0xc2, 0x5f, 0x2c, 0xbc, 0xaa, 0x6e, 0xee, 0xc2, 0xbd, 0x19, 0xd7, 0xcf, 0xb8, 0x62, 0x3d, 0x7f,
	0x45, 0x33, 0xa7, 0x82, 0x8a, 0x2c, 0x5d, 0xf6, 0x82, 0xbf, 0x76, 0x78, 0xd2, 0x27, 0xd0, 0x74,
	0xf9, 0x28, 0x9c, 0x60, 0xb7, 0x39, 0xd0, 0x88, 0x78, 0x9a, 0xb2, 0xf3, 0xec, 0x81, 0x61, 0x48,
	0x7a, 0x0d, 0x9d, 0x13, 0x9e, 0x5c, 0x06, 0x1e, 0x7f, 0xcf, 0x93, 0xd4, 0xcc, 0xf4, 0xd3, 0x84,
	0xc5, 0x9e, 0x6d, 0x38, 0x43, 0x29, 0xbe, 0x27, 0x22, 0x35, 0x09, 0x4d, 0xf1, 0x6a, 0x4a, 0x21,
	0xd9, 0xe9, 0x38, 0x08, 0x7d, 0xa9, 0x46, 0x97, 0x06, 0xac, 0x29, 0x43, 0xdd, 0x1c, 0xb2, 0x54,
	0x4a, 0x76, 0x6e, 0x70, 0xcb, 0x92, 0x3b, 0x3f, 0xaf, 0x00, 0xe9, 0x0b, 0x9f, 0x77, 0x45, 0x14,
	0x8d, 0xe3, 0xc0, 0x33, 0x0f, 0xb8, 0x3d, 0x68, 0x19, 0x83, 0xd0, 0xf2, 0xf5, 0x32, 0x8e, 0xab,
	0x3e, 0xd9, 0x7c, 0x58, 0xe2, 0x16, 0x5d, 0xa0, 0x15, 0xd2, 0x85, 0xb5, 0xfd, 0x4b, 0x1e, 0xcb,
	0x03, 0x2e, 0x33, 0xa8, 0x9a, 0xad, 0xea, 0xef, 0x25, 0xae, 0x15, 0xa7, 0x15, 0x72, 0x00, 0xab,
	0xa8, 0xa4, 0x17, 0x07, 0x32, 0x60, 0xe1, 0xae, 0xef, 0x13, 0xe7, 0xb6, 0xfa, 0xdc, 0x2c, 0xef,
	0x64, 0xc1, 0xa7, 0x15, 0x72, 0x04, 0x04, 0x15, 0xed, 0xfa, 0x7e, 0x9f, 0x5f, 0xd9, 0x26, 0x2c,
	0x8f, 0xb6, 0x3c, 0x9e, 0xdd, 0xa9, 0xae, 0x0f, 0xf7, 0x72, 0xea, 0xb2, 0x71, 0xfe, 0xc9, 0xfa,
	0x7a, 0x46, 0xdf, 0x01, 0x97, 0xf9, 0x27, 0xc5, 0xec, 0x78, 0x6d, 0x96, 0xb8, 0xb9, 0x13, 0xb4,
	0x42, 0xbe, 0x82, 0xb6, 0x55, 0xd5, 0x15, 0x3e, 0x27, 0xb7, 0x34, 0x99, 0x85, 0xac, 0x39, 0x51,
	0xcb, 0xcc, 0xda, 0xc5, 0x53, 0x7a, 0xe2, 0xcd, 0x53, 0x59, 0x36, 0x5b, 0xbf, 0x80, 0x2b, 0xe4,
	0x1b, 0xb8, 0x5f, 0x54, 0x67, 0xdf, 0xd8, 0xf3, 0x14, 0x6e, 0x94, 0x3d, 0x36, 0x53, 0xbf, 0x42,
	0xde, 0x9a, 0xbc, 0x2a, 0x95, 0x61, 0x68, 0xe6, 0xc0, 0x2d, 0x71, 0x2b, 0x3f, 0x48, 0x0a, 0x53,
	0x83, 0x56, 0x9e, 0x57, 0xc9, 0xb1, 0x31, 0x70, 0xd7, 0xf7, 0x8b, 0x23, 0xe5, 0x53, 0x15, 0xf6,
	0x8d, 0x79, 0x7a, 0x8e, 0xde, 0x6d, 0xde, 0xa3, 0xd9, 0xda, 0xec, 0x10, 0x46, 0x7d, 0xef, 0x8c,
	0x3e, 0x1d, 0x17, 0x5b, 0xc6, 0x7f, 0x26, 0xc5, 0xfb, 0xb0, 0x82, 0x1a, 0xfb, 0xfc, 0x0a, 0xeb,
	0xe8, 0x53, 0x6a, 0xee, 0x79, 0x95, 0xf4, 0xa0, 0x83, 0x1f, 0x91, 0xfa, 0xeb, 0x52, 0x7d, 0x7d,
	0xfe, 0xa3, 0x74, 0x62, 0xfa, 0xa1, 0x79, 0x43, 0x59, 0xfe, 0x93, 0xb4, 0x42, 0x5e, 0x43, 0x07,
	0x2d, 0x3a, 0xe1, 0xb1, 0xaf, 0x47, 0x71, 0xd9, 0x24, 0xe4, 0xde, 0xe9, 0xd5, 0x97, 0x50, 0xef,
	0xf3, 0x59, 0x47, 0x67, 0x83, 0x57, 0xf1, 0x9b, 0x0a, 0x1d, 0xea, 0x42, 0xf3, 0x64, 0x12, 0x7b,
	0xea, 0x85, 0xcc, 0xc9, 0x1d, 0xde, 0xcf, 0x31, 0xa3, 0xa5, 0x4a, 0xc9, 0xc2, 0xc3, 0xc7, 0xc1,
	0x9f, 0x15, 0x37, 0x09, 0x5f, 0x3d, 0xe0, 0xb2, 0xf0, 0x6e, 0x9b, 0x97, 0xed, 0x32, 0x08, 0xe5,
	0xff, 0x68, 0x20, 0xa4, 0xb6, 0x0f, 0xb8, 0x9c, 0xbe, 0xf7, 0x67, 0x3e, 0xef, 0x6f, 0xc3, 0xac,
	0xec, 0x18, 0x02, 0x4d, 0xc7, 0xfc, 0x4d, 0xf9, 0xd8, 0x3a, 0x2c, 0xb7, 0xb1, 0x39, 0x4e, 0x2b,
	0xa7, 0x4b, 0xc8, 0x7b, 0xf1, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x1d, 0xd4, 0x58, 0xc1,
	0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeCommunicationsClient is the client API for NodeCommunications service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeCommunicationsClient interface {
	ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error)
	EventGetGasPrice(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GasPrice, error)
	EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventAddNewMultisig(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error)
	EventGetCode(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventGetAdressNonce(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*Nonce, error)
	EventGetAdressBalance(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*Balance, error)
	EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventGetAllMempoolClient, error)
	EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddMempoolRecordClient, error)
	EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteMempoolClient, error)
	EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventNewBlockClient, error)
	CheckRejectTxs(ctx context.Context, in *TxsToCheck, opts ...grpc.CallOption) (*RejectedTxs, error)
	EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error)
	NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewTxClient, error)
	SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error)
	//  Multisig methods
	AddMultisig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_AddMultisigClient, error)
	GetMultisigInfo(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ContractInfo, error)
	// erc20 methods
	GetERC20Info(ctx context.Context, in *ERC20Address, opts ...grpc.CallOption) (*ERC20Info, error)
	// import external seed
	IsEmptyAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*IsEmpty, error)
}

type nodeCommunicationsClient struct {
	cc *grpc.ClientConn
}

func NewNodeCommunicationsClient(cc *grpc.ClientConn) NodeCommunicationsClient {
	return &nodeCommunicationsClient{cc}
}

func (c *nodeCommunicationsClient) ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error) {
	out := new(ServiceVersion)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/ServiceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetGasPrice(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GasPrice, error) {
	out := new(GasPrice)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventGetGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventInitialAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventAddNewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventAddNewMultisig(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventAddNewMultisig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error) {
	out := new(BlockHeight)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventGetBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetCode(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventGetCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetAdressNonce(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*Nonce, error) {
	out := new(Nonce)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventGetAdressNonce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetAdressBalance(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventGetAdressBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventGetAllMempoolClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[0], "/nsethprotobuf.NodeCommunications/EventGetAllMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventGetAllMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventGetAllMempoolClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommunicationsEventGetAllMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventGetAllMempoolClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventAddMempoolRecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[1], "/nsethprotobuf.NodeCommunications/EventAddMempoolRecord", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventAddMempoolRecordClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventAddMempoolRecordClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommunicationsEventAddMempoolRecordClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventAddMempoolRecordClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventDeleteMempoolClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[2], "/nsethprotobuf.NodeCommunications/EventDeleteMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventDeleteMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventDeleteMempoolClient interface {
	Recv() (*MempoolToDelete, error)
	grpc.ClientStream
}

type nodeCommunicationsEventDeleteMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventDeleteMempoolClient) Recv() (*MempoolToDelete, error) {
	m := new(MempoolToDelete)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventResyncAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_EventNewBlockClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[3], "/nsethprotobuf.NodeCommunications/EventNewBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsEventNewBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_EventNewBlockClient interface {
	Recv() (*BlockHeight, error)
	grpc.ClientStream
}

type nodeCommunicationsEventNewBlockClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsEventNewBlockClient) Recv() (*BlockHeight, error) {
	m := new(BlockHeight)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) CheckRejectTxs(ctx context.Context, in *TxsToCheck, opts ...grpc.CallOption) (*RejectedTxs, error) {
	out := new(RejectedTxs)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/CheckRejectTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/EventSendRawTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewTxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[4], "/nsethprotobuf.NodeCommunications/NewTx", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsNewTxClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_NewTxClient interface {
	Recv() (*ETHTransaction, error)
	grpc.ClientStream
}

type nodeCommunicationsNewTxClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsNewTxClient) Recv() (*ETHTransaction, error) {
	m := new(ETHTransaction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/SyncState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) AddMultisig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_AddMultisigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeCommunications_serviceDesc.Streams[5], "/nsethprotobuf.NodeCommunications/AddMultisig", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsAddMultisigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_AddMultisigClient interface {
	Recv() (*Multisig, error)
	grpc.ClientStream
}

type nodeCommunicationsAddMultisigClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsAddMultisigClient) Recv() (*Multisig, error) {
	m := new(Multisig)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) GetMultisigInfo(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ContractInfo, error) {
	out := new(ContractInfo)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/GetMultisigInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) GetERC20Info(ctx context.Context, in *ERC20Address, opts ...grpc.CallOption) (*ERC20Info, error) {
	out := new(ERC20Info)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/GetERC20Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) IsEmptyAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*IsEmpty, error) {
	out := new(IsEmpty)
	err := c.cc.Invoke(ctx, "/nsethprotobuf.NodeCommunications/IsEmptyAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeCommunicationsServer is the server API for NodeCommunications service.
type NodeCommunicationsServer interface {
	ServiceInfo(context.Context, *Empty) (*ServiceVersion, error)
	EventGetGasPrice(context.Context, *Empty) (*GasPrice, error)
	EventInitialAdd(context.Context, *UsersData) (*ReplyInfo, error)
	EventAddNewAddress(context.Context, *WatchAddress) (*ReplyInfo, error)
	EventAddNewMultisig(context.Context, *WatchAddress) (*ReplyInfo, error)
	EventGetBlockHeight(context.Context, *Empty) (*BlockHeight, error)
	EventGetCode(context.Context, *AddressToResync) (*ReplyInfo, error)
	EventGetAdressNonce(context.Context, *AddressToResync) (*Nonce, error)
	EventGetAdressBalance(context.Context, *AddressToResync) (*Balance, error)
	EventGetAllMempool(*Empty, NodeCommunications_EventGetAllMempoolServer) error
	EventAddMempoolRecord(*Empty, NodeCommunications_EventAddMempoolRecordServer) error
	EventDeleteMempool(*Empty, NodeCommunications_EventDeleteMempoolServer) error
	EventResyncAddress(context.Context, *AddressToResync) (*ReplyInfo, error)
	EventNewBlock(*Empty, NodeCommunications_EventNewBlockServer) error
	CheckRejectTxs(context.Context, *TxsToCheck) (*RejectedTxs, error)
	EventSendRawTx(context.Context, *RawTx) (*ReplyInfo, error)
	NewTx(*Empty, NodeCommunications_NewTxServer) error
	SyncState(context.Context, *BlockHeight) (*ReplyInfo, error)
	//  Multisig methods
	AddMultisig(*Empty, NodeCommunications_AddMultisigServer) error
	GetMultisigInfo(context.Context, *AddressToResync) (*ContractInfo, error)
	// erc20 methods
	GetERC20Info(context.Context, *ERC20Address) (*ERC20Info, error)
	// import external seed
	IsEmptyAddress(context.Context, *AddressToResync) (*IsEmpty, error)
}

func RegisterNodeCommunicationsServer(s *grpc.Server, srv NodeCommunicationsServer) {
	s.RegisterService(&_NodeCommunications_serviceDesc, srv)
}

func _NodeCommunications_ServiceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).ServiceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/ServiceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).ServiceInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventGetGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetGasPrice(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventInitialAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventInitialAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventInitialAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventInitialAdd(ctx, req.(*UsersData))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventAddNewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventAddNewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventAddNewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventAddNewAddress(ctx, req.(*WatchAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventAddNewMultisig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventAddNewMultisig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventAddNewMultisig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventAddNewMultisig(ctx, req.(*WatchAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventGetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetBlockHeight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventGetCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetCode(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetAdressNonce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetAdressNonce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventGetAdressNonce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetAdressNonce(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetAdressBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetAdressBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventGetAdressBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetAdressBalance(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetAllMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventGetAllMempool(m, &nodeCommunicationsEventGetAllMempoolServer{stream})
}

type NodeCommunications_EventGetAllMempoolServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommunicationsEventGetAllMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventGetAllMempoolServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventAddMempoolRecord_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventAddMempoolRecord(m, &nodeCommunicationsEventAddMempoolRecordServer{stream})
}

type NodeCommunications_EventAddMempoolRecordServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommunicationsEventAddMempoolRecordServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventAddMempoolRecordServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventDeleteMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventDeleteMempool(m, &nodeCommunicationsEventDeleteMempoolServer{stream})
}

type NodeCommunications_EventDeleteMempoolServer interface {
	Send(*MempoolToDelete) error
	grpc.ServerStream
}

type nodeCommunicationsEventDeleteMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventDeleteMempoolServer) Send(m *MempoolToDelete) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_EventResyncAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventResyncAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventResyncAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventResyncAddress(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventNewBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).EventNewBlock(m, &nodeCommunicationsEventNewBlockServer{stream})
}

type NodeCommunications_EventNewBlockServer interface {
	Send(*BlockHeight) error
	grpc.ServerStream
}

type nodeCommunicationsEventNewBlockServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsEventNewBlockServer) Send(m *BlockHeight) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_CheckRejectTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxsToCheck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).CheckRejectTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/CheckRejectTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).CheckRejectTxs(ctx, req.(*TxsToCheck))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventSendRawTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventSendRawTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/EventSendRawTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventSendRawTx(ctx, req.(*RawTx))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_NewTx_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).NewTx(m, &nodeCommunicationsNewTxServer{stream})
}

type NodeCommunications_NewTxServer interface {
	Send(*ETHTransaction) error
	grpc.ServerStream
}

type nodeCommunicationsNewTxServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsNewTxServer) Send(m *ETHTransaction) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_SyncState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).SyncState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/SyncState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).SyncState(ctx, req.(*BlockHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_AddMultisig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).AddMultisig(m, &nodeCommunicationsAddMultisigServer{stream})
}

type NodeCommunications_AddMultisigServer interface {
	Send(*Multisig) error
	grpc.ServerStream
}

type nodeCommunicationsAddMultisigServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsAddMultisigServer) Send(m *Multisig) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_GetMultisigInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).GetMultisigInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/GetMultisigInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).GetMultisigInfo(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_GetERC20Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ERC20Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).GetERC20Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/GetERC20Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).GetERC20Info(ctx, req.(*ERC20Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_IsEmptyAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).IsEmptyAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsethprotobuf.NodeCommunications/IsEmptyAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).IsEmptyAddress(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeCommunications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nsethprotobuf.NodeCommunications",
	HandlerType: (*NodeCommunicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceInfo",
			Handler:    _NodeCommunications_ServiceInfo_Handler,
		},
		{
			MethodName: "EventGetGasPrice",
			Handler:    _NodeCommunications_EventGetGasPrice_Handler,
		},
		{
			MethodName: "EventInitialAdd",
			Handler:    _NodeCommunications_EventInitialAdd_Handler,
		},
		{
			MethodName: "EventAddNewAddress",
			Handler:    _NodeCommunications_EventAddNewAddress_Handler,
		},
		{
			MethodName: "EventAddNewMultisig",
			Handler:    _NodeCommunications_EventAddNewMultisig_Handler,
		},
		{
			MethodName: "EventGetBlockHeight",
			Handler:    _NodeCommunications_EventGetBlockHeight_Handler,
		},
		{
			MethodName: "EventGetCode",
			Handler:    _NodeCommunications_EventGetCode_Handler,
		},
		{
			MethodName: "EventGetAdressNonce",
			Handler:    _NodeCommunications_EventGetAdressNonce_Handler,
		},
		{
			MethodName: "EventGetAdressBalance",
			Handler:    _NodeCommunications_EventGetAdressBalance_Handler,
		},
		{
			MethodName: "EventResyncAddress",
			Handler:    _NodeCommunications_EventResyncAddress_Handler,
		},
		{
			MethodName: "CheckRejectTxs",
			Handler:    _NodeCommunications_CheckRejectTxs_Handler,
		},
		{
			MethodName: "EventSendRawTx",
			Handler:    _NodeCommunications_EventSendRawTx_Handler,
		},
		{
			MethodName: "SyncState",
			Handler:    _NodeCommunications_SyncState_Handler,
		},
		{
			MethodName: "GetMultisigInfo",
			Handler:    _NodeCommunications_GetMultisigInfo_Handler,
		},
		{
			MethodName: "GetERC20Info",
			Handler:    _NodeCommunications_GetERC20Info_Handler,
		},
		{
			MethodName: "IsEmptyAddress",
			Handler:    _NodeCommunications_IsEmptyAddress_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventGetAllMempool",
			Handler:       _NodeCommunications_EventGetAllMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventAddMempoolRecord",
			Handler:       _NodeCommunications_EventAddMempoolRecord_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventDeleteMempool",
			Handler:       _NodeCommunications_EventDeleteMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventNewBlock",
			Handler:       _NodeCommunications_EventNewBlock_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NewTx",
			Handler:       _NodeCommunications_NewTx_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddMultisig",
			Handler:       _NodeCommunications_AddMultisig_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "streamer.proto",
}
